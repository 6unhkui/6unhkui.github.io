{"version":3,"sources":["webpack:///./src/components/tableOfContents.js","webpack:///./src/components/postComment.js","webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["TableOfContents","items","currentHeaderUrl","className","icon","style","marginRight","opacity","dangerouslySetInnerHTML","__html","PostCommet","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","PostTemplate","data","pageContext","location","post","markdownRemark","previous","next","author","site","siteMetadata","frontmatter","menu","category","title","date","tags","featuredImage","image","childImageSharp","original","description","excerpt","backgroundImage","map","tag","i","to","kebabCase","tableOfContents","html","fields","slug","rel","pageQuery","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","result","call","push"],"mappings":"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","file":"component---src-templates-post-js-4eff11402e713e55e835.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function TableOfContents({ items, currentHeaderUrl }) {\n    return items ? (\n      <div className=\"toc-wrap\">\n        <div>\n            <p className=\"title\"><FontAwesomeIcon icon={\"bookmark\"} style={{marginRight : '8px', opacity : '.6'}}/>TABLE OF CONTENTS</p>\n            <div className=\"content-list\"\n                dangerouslySetInnerHTML={{ __html: items }}\n            />\n        </div>\n      </div>\n    ) : null;\n  }\n","import React, {createRef, useLayoutEffect }from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst PostCommet  = ({repo}) => {\n    const containerRef = createRef();\n\n    useLayoutEffect(() => {\n        const utterances = document.createElement('script');\n\n        const attributes = {\n            src,\n            repo,\n            'issue-term': 'pathname',\n            label: 'comment',\n            theme: 'github-light',\n            crossOrigin: 'anonymous',\n            async: 'true',\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value);\n        });\n\n        containerRef.current.appendChild(utterances);\n    }, [repo]);\n\n    return (\n        <div ref={containerRef} />\n    )\n}\n\nexport default PostCommet;","// markdown-template.js\nimport React from \"react\"\nimport { kebabCase } from 'lodash';\nimport { Link, graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Layout from \"../components/layout\"\nimport TableOfContents from \"../components/tableOfContents\";\nimport PostComment from \"../components/postComment\";\n\n\nexport default function PostTemplate({ data, pageContext, location }) {\n  const post = data.markdownRemark;\n  const { previous, next } = pageContext;\n  const { author} = data.site.siteMetadata;\n  const {menu, category, title, date, tags, featuredImage} = post.frontmatter;\n\n  const image = featuredImage ? featuredImage.childImageSharp.original : null;\n\n  return (\n    <Layout location={location} menu={menu}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.excerpt}\n          image = {image}\n        />\n       \n        <section className=\"post-view\">\n            <div className=\"featured-image\" style={{backgroundImage : image ? `url(${image.src})` : ''}}>\n              <div className=\"post-info-wrap\">\n                <div className=\"post-info container\">\n                  <span className=\"category\">{category}</span>\n                  <h1 className=\"title\">{title}</h1>\n                  <span className=\"meta-data\">by <span className=\"writer\">{author}</span>{' ∙ ' + date}</span>\n                  <div className=\"tags-wrap\">\n                  {tags.map((tag, i) => (\n                    <span className='tag' key={i}><Link to={`/tags/${kebabCase(tag)}/`}>{'# ' + tag}</Link></span>\n                  ))}\n            </div> \n                </div>\n              </div>\n            </div>\n\n          <div className=\"container\">\n          <TableOfContents items={post.tableOfContents}/>\n          <article>\n            <div className=\"content\" dangerouslySetInnerHTML={{ __html: post.html }} />\n\n                      <hr className=\"end-line\"/>\n\n          <div className=\"navigation-wrap\">\n            {previous && (\n              <div className=\"navigation previous\">\n                <p>Previous</p>\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              </div> )}\n\n            {next && (\n              <div className=\"navigation next\">\n                <p>Next</p>\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              </div>)}\n          </div>\n\n          <PostComment repo=\"6unhkui/6unhkui.github.io\" />\n          </article>\n\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        menu\n        title\n        date(formatString: \"MMMM DD, yyyy\")\n        category\n        tags\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n              width\n              height\n            }\n          }\n        }\n      } \n    }\n  }\n`","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}