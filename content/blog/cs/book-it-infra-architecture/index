---
category : IT
title: "그림으로 공부하는 IT 인프라 구조"
date: "2020-07-22"
tags : ["IT", "Book"]
featuredImage: thumbnail.png
---
> [그림으로 공부하는 IT 인프라 구조](http://www.yes24.com/Product/Goods/19041948)를 읽고 학습한 내용을 간략하게 정리한 글입니다.<br/>
> 개발자에게 필요한 IT 인프라 지식을 공부하는데 굉장히 좋은 책입니다. 상세한 내용은 책을 참고해주세요.

# 인프라 아키텍쳐
- 인프라 : 기반이라는 뜻으로 생활을 지탱하는 바탕이나 토대
- 인프라 아키텍쳐 : **IT 기반의 구조**

## 집약형 & 분할형 아키텍쳐
### 1. 집약형 아키텍쳐
주요 업무는 모두 **한대의 대형 컴퓨터로 처리**한다.(심장 전략)<br/>
- **장점**
     1. 한대의 컴퓨터만 있으면 되므로 구성이 간단하다.
     2. 대형 컴퓨터의 리소스 관리나 이중화에 의해 안전성이 높고 고성능이다.
- **단점**
     1. 대형 컴퓨터의 도입 비용과 유지 비용이 크다
     2. 확정성에 한계가 있다.

### 2. 분할형 아키텍쳐
대형 컴퓨터가 했던 처리를 **다수의 소형 컴퓨터로 분할 처리**한다.(신장 전략)<br/>
- **장점**
     1. 낮은 비용으로 시스템을 구축 할 수 있다.
     2. 서버의 대수를 늘릴 수 있어 확장성이 높다
- **단점**
     1. 대수가 늘어나면 관리 구조가 복잡해진다.
     2. 한대가 망가지면 영향 범위를 최소화 하기 위한 구조를 검토해야 한다.

## 물리적 서버 & 논리적 서버
- 서버 : 특정한 역할에 특화된 것
- 물리 서버 : 컴퓨터 자체 (하드웨어)
- 논리 서버 : 컴퓨터에서 동작하고 있는 소프트웨어 ex) DB 서버, 웹 서버..

## 수직 분할형 아키텍쳐
### 1. 클라이언트 - 서버형 아키텍쳐 (C/S)
클라이언트 측에 전용 소프트웨어를 설치하고, 화면 표시나 단순 계산을 클라이언트(단말)에서 실행하고 필요한 경우 서버에 요청을 보낸다.<br/>
클라이언트-서버가 역할 별로 분할(수직 분할) 되어 있다. 
- **장점**
     1. 클라이언트 측에 많은 처리를 실행 할 수 있어서 소수의 서버로 다수의 클라이언트를 처리 할 수 있다.
- **단점**
     1. 클라리언트 측의 소프트웨어 정기 업데이트가 필요하다.<br/>
     (사용자가 업데이트를 반드시 한다는 보장이 없기 때문에 시스템 위험 요소가 될 수 있음)
     2. 서버 확장성에 한계가 발생 할 수 있다.

### 2. 3계층형 아키텍쳐
```
      웹 서버                      AP 서버                    DB 서버
+---------------+           +---------------+            +----------+
| 프레젠테이션 계층 | <-------> | 애플리케이션 계층 | <-------> | 데이터 계층 |
+---------------+           +---------------+            +----------+
- 사용자 입력을 받는다.          - 사용자 요청에 따라         - 애플리케이션 요청에 따라
- 웹 브라우저 화면을 표시한다        업무를 처리한다.            데이터 입출력을 한다.            
```

- **장점**
     1. 서버 부하 집중 개선
     2. 클라이언트 단말의 정기 업데이트가 불필요하다. (클라이언트는 브라우저만 있으면 된다.)
     3. '처리 반환'에 의한 서버 부하 저감
- **단점** 
     1. 구조가 c/s 구성보다 복잡하다.

## 수평 분할형 아키텍쳐
### 1. 단순 수평 분할형 아키텍쳐
시스템을 둘로 분할하여, 시스템 전체 처리 성능을 두배로 향상시킨다.<br/> 
두개의 독립된 시스템이 생성되기에 A측 시스템 장애가 발생해도 B측 시스템에는 전혀 영향을 주지 않는다.
- **장점**
     1. 수평으로 서버를 늘리기 때문에 확장성이 향상됨
- **단점** 
     1. 데이터를 일원화해서 볼 수 없다.
     2. 애플리케이션 업데이트는 양쪽을 동시에 해주어야 한다.

### 2. 공유형 아키텍쳐
단순 분할형과 달리 일부 계층에서 상호 접속이 이루어진다. ex) 데이터를 동기 처리
- **장점**
     1. 수평으로 서버를 늘리기때문에 확장성이 향상
     2. 분할한 시스템이 서로 다른 시스템에 데이터를 참조 할 수 있다.
- **단점** 
     1. 분할한 시스템간 독립성이 낮아진다
     2. 공유한 계층의 확장성이 낮아진다.

## 가상화 구성

하나의 물리서버에 여러대의 가상화 서버를 운영하며, 이 물리 서버도 이중화하여 한대가 망가지더라도 계속 운영 가능하다.

## 지리 분할형 아키텍쳐

### 1. 스탠바이형 아키텍쳐
물리 서버를 최소 두대 이상 준비하여 한대가 고장나면 가동중인 소프트웨어를 다른 한대로 옮겨서 운영하는 방식이다.

### 2. 재난 대책형 아키텍쳐
서버 장비를 최소 구성 및 동시 구성으로 별도 사이트에 배치하고 소프트웨어 상용 환경과 동일하게 설정한다.<br/>
재난 발생 시, 전혀 다른 사이트에 있는 정보를 이용하게 된다. 여기서 중요한 건 애플리케이션 최신화와 데이터 최신화이다.

## 클라우드형 아키텍쳐
서버가 가상화 돼 있어서 사용자는 어느 물리 서버에서 동작하는지 모른다.<br/>
클라우드 세계에서는 어떤 계층을 클라우드 상에 배치하는가에 따라 명칭이 달라진다.
- SaaS :  서버 뿐만 아니라 애플리케이션을 포함한 업무 시스템을 클라우드 서비스 회사가 제공하기 때문에, 사용자는 인프라를 의식할 필요가 없다.
- 반면 PaaS(Platform as a Service), IaaS(Infrastructure as a Service), DBaaS(Database as s Service) 등에서는 일반적인 3계층형 시스템을 구성하는 서버의 일부 혹은 전부를 클라우드 상의 리소스로 대체한다.

