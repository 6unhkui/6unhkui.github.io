---
category : Spring
title: "Spring Boot 개념과 활용"
date: "2020-07-22"
tags : ["Spring Boot"]
featuredImage: thumbnail.png
---

> [백기선님의 스프링 부트 개념과 활용](https://inf.run/Uncw) 강의를 듣고 학습한 내용을 간략하게 정리한 글입니다.<br/>
> 스프링 부트의 동작 방식과 개념, 그리고 활용까지 모두 익힐 수 있었습니다. 자세한 내용은 강의를 들어주세요.

# 스프링 부트 시작하기
## 스프링 부트란?
1. **프로덕션 수준의 Spring 기반 Application을 빠르고 쉽게 만들 수 있다.**
2. 스프링 플랫폼 뿐만 아니라 써드 파티 라이브러리(Embedded Server로 기본 설정되어 있는 Tomcat 등)에 대한 **가장 기본적인(최적의) 설정을 제공**해준다.
3. 비즈니스 로직을 구현하는데 필요한 기능 뿐만 아니라 non-functional features도 제공한다.<br/>
(예를 들어 Embedded Servers, Security, Metrics, Health Checks, 설정 파일 밖으로 꺼내기 등)
4. **XML 설정과 code generation을 더이상 하지 않는다.**

## System Requirement
- Java 8

## 스프링 부트 시작하기
1. Maven 프로젝트 생성
2. pom.xml 기본 설정

```xml:title=pom.xml
<?xml version="1.0" encoding="UTF-8"?>
    <project xmlns="http://maven.apache.org/POM/4.0.0"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>spring-start</artifactId>
    <version>1.0-SNAPSHOT</version>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.3.3.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>
</project>
```

3. 메인 애플리케이션 클래스 생성

```java:title=Application.java
@SpringBootApplication
public class Application {
    public static void main(String[] args) {
        SpringApplication.run(Application.class, args);
    }
}
```

4. Application 클래스의 main 메소드를 실행하면 임베디드 서버가 띄워지고, 그 위에 애플리케이션이 동작하게 된다.


## 스프링 부트 프로젝트 구조
메이븐 기본 프로젝트 구조와 동일하다.

```java
[Project]
+ src +-- main +-- java // 소스 코드
      |        |     +- com.example.myapplication
      |        |                +- Application.java // 메인 애플리케이션
      |        |                +- ...
      |        +-- resource // 소스 리소스
      |
      +-- test +-- java // 테스트 코드
                    +-- resource // 테스트 리소스
```

- 메인 애플리케이션 위치 : 기본 패키지

    `@SpringBootApplication` 에 의해 컴포넌트 스캔이 될 때, 해당 클래스의 하위의 클래스를 스캔 대상으로 삼으므로

    메인 애플리케이션은 기본 패키지에 위치하는 것을 추천한다