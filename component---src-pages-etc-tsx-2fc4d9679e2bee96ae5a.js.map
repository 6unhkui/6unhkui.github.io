{"version":3,"sources":["webpack:///./src/components/Post/posts.tsx","webpack:///./src/components/Filter/switcher.tsx","webpack:///./src/components/Filter/search.tsx","webpack:///./src/components/Post/postDetail.tsx","webpack:///./static/images/gradation-bg.png","webpack:///./src/pages/etc.tsx"],"names":["View","Posts","posts","view","useState","postsToShow","setPostsToShow","_infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","useEffect","window","addEventListener","removeEventListener","length","slice","map","post","i","node","frontmatter","title","date","category","tags","featuredImage","key","className","to","fields","slug","src","childImageSharp","resize","Thumbnail","dangerouslySetInnerHTML","__html","excerpt","tag","kebabCase","Switcher","items","selectedItem","onChange","handleChange","useCallback","event","target","dataset","data-category","onClick","v","toUpperCase","fieldValue","Search","value","icon","type","placeholder","PostDetail","data","edges","allMarkdownRemark","selectedCategory","setSelectedCategory","searchValue","setSearchValue","changeCategory","style","marginBottom","categories","filter","s","trim","indexOf","findIndex","a","module","exports","EtcPage","location","pageQuery"],"mappings":"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","file":"component---src-pages-etc-tsx-2fc4d9679e2bee96ae5a.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { kebabCase } from 'lodash';\nimport { Link } from \"gatsby\"\nimport Thumbnail from \"../../../static/images/gradation-bg.png\";\nimport { Edge } from \"../../models/ListQuery\"\n\nenum View {\n  CARD = 'card',\n  LIST = 'list'\n}\n\ninterface Props {\n  posts : Edge[],\n  view? : View\n}\n\nconst showCount = 6;\nconst Posts:React.FC<Props> = ({posts, view = \"card\"}) => {\n  const [postsToShow, setPostsToShow] = useState(showCount);\n  \n  useEffect(() => {\n    window.addEventListener('scroll', _infiniteScroll, true);\n    return window.removeEventListener('scroll', _infiniteScroll);\n  }, []);\n\n  function _infiniteScroll()  {\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    let clientHeight = document.documentElement.clientHeight;\n\n    if(scrollTop + clientHeight === scrollHeight) {\n      setPostsToShow(postsToShow + showCount);\n    }\n  }\n\n  return (\n    <>\n      {/** Post List Area */}   \n      {posts.length > 0 ?\n        <>\n          {posts.slice(0, postsToShow).map((post, i) => {\n            const {title, date, category, tags, featuredImage} = post.node.frontmatter;\n            return (\n              <article key={i} className={view}>\n                <Link to={post.node.fields.slug}>\n                  <img src={featuredImage ? featuredImage.childImageSharp.resize.src : Thumbnail} />\n\n                  <div className=\"post-info\">\n                    <p className=\"date\">{date}</p>\n                    <span className=\"category\">{category}</span>\n                    <h1 className=\"title\">\n                      {title}\n                    </h1>\n       \n                    <p className=\"summary\" dangerouslySetInnerHTML={{__html: post.node.excerpt,}}/> \n\n\n                    <div className=\"tags-wrap\">\n                      {tags && tags.map((tag, i) => (\n                        <span className='tag' key={i}><Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link></span>\n                      ))}\n                    </div> \n                    </div>\n                </Link>\n              </article>\n          )})\n          }\n        </>\n      : \n      <div className=\"empty\">게시글이 존재하지 않습니다.</div>\n    }\n  </>\n  );\n};\n\nexport default Posts;","import React, {useCallback} from \"react\"\nimport { Category } from \"../../models/ListQuery\"\n\n\ninterface Props {\n  items : Category[];\n  selectedItem: string;\n  onChange : (category:string) => void;\n}\n\nconst Switcher: React.FC<Props> = ({ items, selectedItem = 'ALL', onChange}) => {\n\n    const handleChange = useCallback(event => {\n      onChange(event.target.dataset.category)\n    },[]);\n\n    return (\n      <div className=\"switcher-wrap\">\n        <div className={'switcher-option ' + (selectedItem === 'ALL' && 'selected')}\n             data-category=\"ALL\"\n             onClick={handleChange}>ALL</div>\n        {items.map((v, i) =>\n          (<div key={i}\n                className={'switcher-option ' + (selectedItem.toUpperCase() === `${v.fieldValue.toUpperCase()}` ? 'selected' : '')}\n                data-category={v.fieldValue}\n                onClick={handleChange}>\n            {v.fieldValue}\n          </div>))}\n      </div>\n    )\n}\n\nexport default Switcher;","import React, { useCallback } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\ninterface Props {\n  value : string;\n  onChange : (value:string) => void;\n}\n\nconst Search : React.FC<Props> = ({value, onChange}) => {\n\n  const handleChange = useCallback(event => {\n    onChange(event.target.value)\n  },[]);\n\n  return (\n      <div className='search-wrap'>\n          <FontAwesomeIcon icon={\"search\"} className='ico-search'/>\n          <input type=\"text\"\n                 placeholder=\"검색어를 입력하세요.\"\n                 value={value}\n                 onChange={handleChange}\n                 className=\"search-input\"\n          />\n      </div>\n\n    )\n}\n\nexport default Search;","import React, {useState, useCallback} from 'react';\nimport Posts from \"./posts\";\nimport Switcher from \"../Filter/switcher\";\nimport Search from \"../Filter/search\"\nimport { Query } from \"../../models/ListQuery\"\n\ninterface Props {\n  data : Query\n}\n\nconst PostDetail : React.FC<Props> = ({data}) => {\n  const {allMarkdownRemark : {edges}} = data;\n  const [selectedCategory, setSelectedCategory] = useState('ALL');\n  const [searchValue, setSearchValue] = useState('');\n\n  const changeCategory = useCallback( value => {\n    setSelectedCategory(value);\n    setSearchValue('');\n  }, []);\n\n  return ( \n        <section className=\"posts-wrap\">\n          <div className=\"posts container\">\n            {edges.length > 0 &&\n              <div className='filter-wrap' style={{marginBottom : '1.8rem'}}>\n                <Switcher items={data.allMarkdownRemark.categories}\n                          selectedItem={selectedCategory}\n                          onChange={changeCategory}/>\n                <Search onChange={setSearchValue} value={searchValue}/>\n              </div>\n            }\n\n            <Posts posts={edges.filter((s) => {\n                // 선택된 카테고리가 ALL일 경우, 모든 포스트를 보여주고\n                // ALL이 아닐 경우, 선택한 카테고리와 카테고리가 일치하는 포스트만 필터링\n                if(selectedCategory.toUpperCase() === 'ALL') return s;\n                else return s.node.frontmatter.category.toUpperCase() === selectedCategory.toUpperCase()})\n              .filter((s) => {\n                // 검색어가 없을 경우, 모든 포스트를 보여주고\n                // 검색어가 있을 경우, 제목과 태그에 일치하는 포스트만 필터링\n                if(searchValue.trim().length === 0) return s;\n                else {\n                  if(s.node.frontmatter.title.toUpperCase().indexOf(searchValue.trim().toUpperCase()) !== -1) return s;\n                  else if(s.node.frontmatter.tags.findIndex(a => a.toUpperCase().indexOf(searchValue.trim().toUpperCase()) !== -1) !== -1) return s;\n                  return null;\n                }})\n            }/>\n          </div>\n        </section>\n  )\n}\n\nexport default PostDetail;\n","module.exports = __webpack_public_path__ + \"static/gradation-bg-ede5f65187fb6614201d52efa7ce59b1.png\";","import React from 'react';\nimport Index from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostDetail from '../components/Post/postDetail';\nimport { Query } from \"../models/ListQuery\"\nimport { graphql } from \"gatsby\"\n\ninterface Props {\n  data : Query;\n  location: Location;\n}\nconst EtcPage: React.FC<Props> = ({data, location}) => {\n  return (\n      <Index location={location}>\n        <SEO title=\"ComputerScience\"/>\n        <PostDetail data={data}/>\n      </Index>\n  )\n}\n\nexport default EtcPage;\n\nexport const pageQuery = graphql`\nquery($path: String! = \"/etc/\") {\n    allMarkdownRemark(filter: {fields: {slug: {regex: $path}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            category\n            featuredImage {\n              childImageSharp{\n                resize(width: 700) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n      categories : group(field: frontmatter___category) {\n        fieldValue\n      }\n    }\n}`;"],"sourceRoot":""}