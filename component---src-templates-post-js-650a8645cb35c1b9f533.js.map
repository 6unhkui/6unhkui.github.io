{"version":3,"sources":["webpack:///./src/components/Post/tableOfContents.js","webpack:///./src/components/Post/postComment.js","webpack:///./src/templates/post.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/es7.object.entries.js","webpack:///./node_modules/gatsby/node_modules/core-js/modules/_object-to-array.js"],"names":["TableOfContents","items","currentHeaderUrl","className","icon","style","marginRight","opacity","dangerouslySetInnerHTML","__html","PostComment","repo","containerRef","createRef","useLayoutEffect","utterances","document","createElement","attributes","src","label","theme","crossOrigin","async","Object","entries","forEach","key","value","setAttribute","current","appendChild","ref","PostTemplate","data","pageContext","location","previous","next","author","site","siteMetadata","markdownRemark","excerpt","html","tableOfContents","frontmatter","category","title","date","tags","featuredImage","image","childImageSharp","original","description","backgroundImage","map","tag","i","to","kebabCase","fields","slug","rel","pageQuery","$export","$entries","S","it","DESCRIPTORS","getKeys","toIObject","isEnum","f","module","exports","isEntries","O","keys","length","result","call","push"],"mappings":"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","file":"component---src-templates-post-js-650a8645cb35c1b9f533.js","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nexport default function TableOfContents({ items, currentHeaderUrl }) {\n    return items ? (\n      <div className=\"toc-wrap\">\n        <p className=\"title\">\n          <FontAwesomeIcon icon={\"bookmark\"} style={{marginRight : '8px', opacity : '.6'}}/>\n          TABLE OF CONTENTS\n        </p>\n        <div className=\"content-list\"\n             dangerouslySetInnerHTML={{ __html: items }}\n        />\n      </div>\n    ) : null;\n  }\n","import React, {createRef, useLayoutEffect }from 'react';\n\nconst src = 'https://utteranc.es/client.js';\nconst PostComment = ({repo}) => {\n    const containerRef = createRef();\n\n    useLayoutEffect(() => {\n        const utterances = document.createElement('script');\n\n        const attributes = {\n            src,\n            repo,\n            'issue-term': 'pathname',\n            label: 'comment',\n            theme: 'github-light',\n            crossOrigin: 'anonymous',\n            async: 'true',\n        };\n\n        Object.entries(attributes).forEach(([key, value]) => {\n            utterances.setAttribute(key, value);\n        });\n\n        containerRef.current.appendChild(utterances);\n    }, [repo]);\n\n    return (\n        <div ref={containerRef} />\n    )\n}\n\nexport default PostComment;","// markdown-template.js\nimport React from \"react\"\nimport { kebabCase } from 'lodash';\nimport { Link, graphql } from \"gatsby\"\nimport SEO from \"../components/seo\"\nimport Index from \"../components/Layout\"\nimport TableOfContents from \"../components/Post/tableOfContents\";\nimport PostComment from \"../components/Post/postComment\";\n\n\nexport default function PostTemplate({ data, pageContext, location }) {\n  const { previous, next } = pageContext;\n  const {\n    site : {siteMetadata : { author }},\n    markdownRemark: {\n      excerpt,\n      html,\n      tableOfContents,\n      frontmatter : {category, title, date, tags, featuredImage}\n    }\n  } = data;\n\n  const image = featuredImage ? featuredImage.childImageSharp.original : null;\n\n  return (\n    <Index location={location}>\n        <SEO\n          title={title}\n          description={excerpt}\n          image = {image}\n        />\n       \n        <section className=\"post-view\">\n            <div className=\"featured-image\" style={{backgroundImage : image ? `url(${image.src})` : ''}}>\n              <div className=\"post-info-wrap\">\n                <div className=\"post-info container\">\n                  {category && <span className=\"category\">{category}</span>}\n                  {title && <h1 className=\"title\">{title}</h1>}\n                  <span className=\"meta-data\">by <span className=\"writer\">{author}</span>{' ∙ ' + date}</span>\n                  <div className=\"tags-wrap\">\n                  {tags.map((tag, i) => (\n                    <span className='tag' key={i}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </span>\n                  ))}\n                  </div> \n                </div>\n              </div>\n            </div>\n\n          <div className=\"container\">\n          <TableOfContents items={tableOfContents}/>\n\n          <article>\n          <div className=\"content\" dangerouslySetInnerHTML={{ __html: html }} />\n\n          <hr className=\"end-line\"/>\n\n          <div className=\"navigation-wrap\">\n            {previous && (\n              <div className=\"navigation previous\">\n                <p>Previous</p>\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              </div> )}\n\n            {next && (\n              <div className=\"navigation next\">\n                <p>Next</p>\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              </div>)}\n          </div>\n\n          <PostComment repo=\"6unhkui/6unhkui.github.io\" />\n          </article>\n\n        </div>\n      </section>\n    </Index>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($slug: String!) {\n    site {\n      siteMetadata {\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      fields {\n        slug\n      }\n      id\n      excerpt(pruneLength: 160)\n      html\n      tableOfContents\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, yyyy\")\n        category\n        tags\n        featuredImage {\n          childImageSharp {\n            original {\n              src\n              width\n              height\n            }\n          }\n        }\n      } \n    }\n  }\n`","// https://github.com/tc39/proposal-object-values-entries\nvar $export = require('./_export');\nvar $entries = require('./_object-to-array')(true);\n\n$export($export.S, 'Object', {\n  entries: function entries(it) {\n    return $entries(it);\n  }\n});\n","var DESCRIPTORS = require('./_descriptors');\nvar getKeys = require('./_object-keys');\nvar toIObject = require('./_to-iobject');\nvar isEnum = require('./_object-pie').f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS || isEnum.call(O, key)) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n"],"sourceRoot":""}