{"version":3,"sources":["webpack:///./src/components/Post/posts.tsx","webpack:///./src/components/Filter/switcher.tsx","webpack:///./src/components/Filter/search.tsx","webpack:///./src/pages/project.tsx","webpack:///./static/images/gradation-bg.png","webpack:///./src/components/Post/postSingle.tsx"],"names":["Category","Switcher","React","memo","items","selectedItem","onChange","handleChange","useCallback","event","target","dataset","category","className","map","item","i","key","toUpperCase","fieldValue","data-category","onClick","SearchIco","icon","Search","value","type","placeholder","Posts","data","allMarkdownRemark","allPosts","edges","categories","useState","posts","setPosts","postsToShow","setPostsToShow","searchValue","setSearchValue","All","selectedCategory","setSelectedCategory","categoryItems","_infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","state","filterPosts","filter","post","node","frontmatter","title","tags","length","includes","some","tag","useEffect","addEventListener","removeEventListener","onChangeCategory","trim","onChangeSearchInput","style","margin","slice","ProjectPage","location","pageQuery","module","exports","PostSingle","date","featuredImage","slug","fields","excerpt","to","src","childImageSharp","resize","Thumbnail","dangerouslySetInnerHTML","__html","kebabCase"],"mappings":"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","file":"component---src-pages-project-tsx-f51d8bea93e507991c66.js","sourcesContent":["import React, {useEffect, useState, useCallback} from 'react';\nimport Switcher from \"../Filter/switcher\";\nimport Search from \"../Filter/search\"\nimport { Query } from \"../../interfaces/PostList\"\nimport PostSingle from './postSingle';\n\n\ninterface Props {\n  data : Query\n}\nenum Category {\n  All = 'ALL'\n}\n\nconst SHOW_COUNT = 6;\n\nconst Posts : React.FC<Props> = ({data}) => {\n  const {allMarkdownRemark : {edges : allPosts, categories}} = data;\n  const [posts, setPosts] = useState(allPosts);\n  const [postsToShow, setPostsToShow] = useState(SHOW_COUNT);\n  const [searchValue, setSearchValue] = useState('');\n  const [selectedCategory, setSelectedCategory] = useState(Category.All);\n  const categoryItems = useState(() => [{fieldValue : Category.All}, ...categories])[0];\n\n  useEffect(() => {\n    setPostsToShow(SHOW_COUNT);\n    setPosts(filterPosts);\n  }, [searchValue, selectedCategory])\n\n  useEffect(() => {\n    document.addEventListener('scroll', _infiniteScroll, false);\n    return () => {\n      document.removeEventListener('scroll', _infiniteScroll, false);\n    }\n  }, []);\n\n  function _infiniteScroll()  {\n    const scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    const scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    const clientHeight = document.documentElement.clientHeight;\n\n    if(scrollTop + clientHeight > scrollHeight - 300) {\n      setPostsToShow(state => state + SHOW_COUNT);\n    }\n  }\n\n  function filterPosts() {\n    return allPosts.filter(post => {\n      const {node : {frontmatter : {category}}} = post;\n      // 선택된 카테고리가 ALL 이거나, 선택된 카테고리와 리스트의 카테고리가 일치할 경우 true\n      return selectedCategory.toUpperCase() === Category.All || category.toUpperCase() === selectedCategory.toUpperCase()\n    }).filter(post => {\n      const {node : {frontmatter : {title, tags}}} = post;\n      // 검색어가 없거나, 제목 혹은 태그가 일치할 경우 true\n      return searchValue.length === 0 ||\n             title.toUpperCase().includes(searchValue.toUpperCase()) || \n             tags.some(tag => tag.toUpperCase().includes(searchValue.toUpperCase()));\n    });\n  }\n\n  const onChangeCategory = useCallback(value => {\n    setSelectedCategory(value.trim());\n    setSearchValue('');\n  }, []);\n\n  const onChangeSearchInput = useCallback(value => {\n    setSearchValue(value.trim());\n  }, []);\n\n  return ( \n    <section className=\"posts-wrap\">\n      <div className=\"posts container\">\n        {allPosts.length > 0 &&\n          <div className='filter-wrap'>\n            <Switcher items={categoryItems}\n                      selectedItem={selectedCategory}\n                      onChange={onChangeCategory}\n            />\n            <Search onChange={onChangeSearchInput} value={searchValue}/>\n          </div>\n        }\n\n        <div style={{\n          margin : 0\n        }}>\n          {posts.length > 0 ? \n            posts.slice(0, postsToShow).map((post, i) => <PostSingle data={post} key={i}/>)\n            : <div className=\"empty\">게시글이 존재하지 않습니다.</div>\n          }\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Posts;\n","import React, {useCallback} from \"react\"\nimport { Category } from \"../../interfaces/PostList\"\nimport propTypes from 'prop-types';\n\n\ninterface Props {\n  items : Category[];\n  selectedItem: string;\n  onChange : (category: string) => void;\n}\n\nconst Switcher: React.FC<Props> = React.memo(({ items, selectedItem = 'ALL', onChange}) => {\n  \n    const handleChange = useCallback(event => {\n      onChange(event.target.dataset.category)\n    },[]);\n    \n    return (\n      <div className=\"switcher-wrap\">\n        {items.map((item, i) =>\n          (<div key={i}\n                className={'switcher-option ' + \n                          (selectedItem.toUpperCase() === item.fieldValue.toUpperCase() ? 'selected' : '')}\n                data-category={item.fieldValue}\n                onClick={handleChange}>\n            {item.fieldValue}\n          </div>))}\n      </div>\n    )\n})\n\nexport default Switcher;","import React, { useCallback, useMemo } from \"react\"\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\n\ninterface Props {\n  value : string;\n  onChange : (value:string) => void;\n}\n\nconst SearchIco = React.memo(() => {\n  return <FontAwesomeIcon icon={\"search\"} className='ico-search'/>}\n)\n\nconst Search : React.FC<Props> = React.memo(({value, onChange}) => {\n\n  const handleChange = useCallback(event => {\n    onChange(event.target.value)\n  },[]);\n\n  return (\n      <div className='search-wrap'>\n          <SearchIco/>\n          <input type=\"text\"\n                 placeholder=\"검색어를 입력하세요.\"\n                 value={value}\n                 onChange={handleChange}\n                 className=\"search-input\"\n          />\n      </div>\n\n    )\n})\n\nexport default Search;","import React from 'react';\nimport Index from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport Posts from \"../components/Post/posts\"\nimport { Query } from \"../interfaces/PostList\"\nimport { graphql } from \"gatsby\"\n\ninterface Props {\n  data : Query;\n  location: Location;\n}\nconst ProjectPage: React.FC<Props> = ({data, location}) => (\n  <Index location={location}>\n    <SEO title=\"Project\"/>\n    <Posts data={data}/>\n  </Index>\n)\n\nexport default ProjectPage;\n\n\nexport const pageQuery = graphql`\nquery {\n    allMarkdownRemark(filter: {fields: {slug: {regex: \"/^\\/project\\//\"}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(format: PLAIN, truncate: true, pruneLength: 50)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            category\n            featuredImage {\n              childImageSharp{\n                resize(width: 700) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n      categories : group(field: frontmatter___category) {\n        fieldValue\n      }\n    }\n}`;\n","module.exports = __webpack_public_path__ + \"static/gradation-bg-ede5f65187fb6614201d52efa7ce59b1.png\";","import React from 'react';\nimport Thumbnail from \"../../../static/images/gradation-bg.png\";\nimport { Link } from \"gatsby\"\nimport { kebabCase } from 'lodash';\nimport { Edge } from \"../../interfaces/PostList\"\n\n\ninterface Props {\n    data : Edge\n}\n\nconst PostSingle: React.FC<Props> = ({data}) => {\n    const {\n        frontmatter : {title, date, category, tags, featuredImage},\n        fields : {slug},\n        excerpt\n    } = data.node;\n\n    return (\n        <article className='card'>\n        <Link to={slug}>\n          <img src={featuredImage ? featuredImage.childImageSharp.resize.src : Thumbnail} />\n\n          <div className=\"post-info\">\n            <p className=\"date\">{date}</p>\n            <span className=\"category\">{category}</span>\n            <h1 className=\"title\">\n              {title}\n            </h1>\n\n            <p className=\"summary\" dangerouslySetInnerHTML={{__html: excerpt,}}/> \n\n            <div className=\"tags-wrap\">\n              {tags?.map((tag, i) => (\n                <span className='tag' key={i}><Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link></span>\n              ))}\n            </div> \n            </div>\n        </Link>\n      </article>\n    )\n}\n\nexport default PostSingle;"],"sourceRoot":""}