{"componentChunkName":"component---src-templates-post-tsx","path":"/programming/java-default-class","result":{"data":{"site":{"siteMetadata":{"author":"Inkyung"}},"markdownRemark":{"fields":{"slug":"/programming/java-default-class"},"id":"a55a3a4f-a477-5bfe-bf5e-a6c0952c1146","excerpt":"Object 클래스 Object 클래스는 모든 자바 클래스의 최상위 클래스이다. 즉, 모든 클래스는 Object 클래스를 상속받는다. \n코드를 작성하지 않지만 클래스를 선언할 때 컴파일러에 의해  코드가 자동으로 추가된다.\nObject…","html":"<h1 id=\"object-클래스\" style=\"position:relative;\"><a href=\"#object-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"object 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Object 클래스</h1>\n<p>Object 클래스는 모든 자바 클래스의 최상위 클래스이다. 즉, <strong>모든 클래스는 Object 클래스를 상속받는다.</strong> <br/>\n코드를 작성하지 않지만 클래스를 선언할 때 컴파일러에 의해 <code class=\"language-text\">extends Object</code> 코드가 자동으로 추가된다.<br/>\nObject 클래스에 의해 상속 받는 여러 메소드 중에서 몇가지를 알아보자.</p>\n<h3 id=\"tostring-메소드\" style=\"position:relative;\"><a href=\"#tostring-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"tostring 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>toString 메소드</h3>\n<p>toString 메소드는 <strong>인스턴스의 정보를 문자열로 반환하는 메소드</strong>이다.<br/>\n이 메소드의 원형은 생성된 인스턴스의 클래스 이름과 주소 값을 보여주는 형태다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token function\">getClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"@\"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHexString</span><span class=\"token punctuation\">(</span><span class=\"token function\">hashCode</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><code class=\"language-text\">System.out.println()</code>으로 시스템 로그를 출력할 때도 toString 메소드가 호출된다.<br/>\n이 정보를 변경하고 싶으면 toString 메소드를 오버라이딩해준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">String</span> name<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> name<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> age<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> name<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">=</span> age<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token string\">\"이름은 \"</span> <span class=\"token operator\">+</span> name <span class=\"token operator\">+</span> <span class=\"token string\">\" 나이는 \"</span> <span class=\"token operator\">+</span> age <span class=\"token operator\">+</span> <span class=\"token string\">\"살\"</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectClassTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> budu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dubu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>budu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n이름은 dubu 나이는 3살\n*/</span></code></pre></div>\n<h3 id=\"equals-메소드\" style=\"position:relative;\"><a href=\"#equals-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"equals 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>equals 메소드</h3>\n<p>equals 메소드는 <strong>두 인스턴스가 동일한지 여부를 반환</strong>한다. 오버라이딩하여 논리적으로 동일한 인스턴스임을 정의할 수 있다.<br/></p>\n<ul>\n<li>String 클래스는 이미 equals 메소드가 오버라이딩 되어있는 상태이다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..... 멤버 변수 선언, 생성자, getter, setter 생략 .....</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">==</span> animal<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectClassTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> budu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dubu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span> kitty <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kitty\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> isSame <span class=\"token operator\">=</span> budu<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>kitty<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>\n            <span class=\"token string\">\"%s와 %s는 서로 %s 동물이다.\"</span><span class=\"token punctuation\">,</span> \n            budu<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> kitty<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> isSame <span class=\"token operator\">?</span> <span class=\"token string\">\"같은\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"다른\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\ndubu와 kitty는 서로 다른 동물이다.\n*/</span></code></pre></div>\n<h3 id=\"clone-메소드\" style=\"position:relative;\"><a href=\"#clone-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"clone 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>clone 메소드</h3>\n<p>객체를 복제하여 <strong>동일한 멤버 변수 값을 가진 새로운 인스턴스를 생성 할 때 사용</strong>한다.<br/>\nclone 메소드 자체는 모든 메소드가 가지고 있긴 하지만, 인스턴스의 복사는 주의를 요구하기 때문에 복사를 허용한다는 의미로 <strong>Cloneable 인터페이스를 구현</strong>해야 한다.<br/>\nCloneable 인터페이스는 구현해야 할 추상 메소드가 없는 <strong>마커 인터페이스</strong>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Cloneable</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..... 멤버 변수 선언, 생성자, getter, setter 생략 .....</span>\n\n    <span class=\"token comment\">// 접근 제어자를 public으로 바꿔줌</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Object</span> <span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">CloneNotSupportedException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">super</span><span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Object의 clone 메소드 호출</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token comment\">// ..... equals 메소드 생략 .....</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ObjectClassTest</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">CloneNotSupportedException</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> budu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dubu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span> cloneBudu <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span>budu<span class=\"token punctuation\">.</span><span class=\"token function\">clone</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">boolean</span> isSame <span class=\"token operator\">=</span> budu<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>cloneBudu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span>\n                <span class=\"token string\">\"%s와 %s는 서로 %s 동물이다.\"</span><span class=\"token punctuation\">,</span>\n                budu<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> cloneBudu<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> isSame <span class=\"token operator\">?</span> <span class=\"token string\">\"같은\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"다른\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\ndubu와 dubu는 서로 같은 동물이다.\n*/</span></code></pre></div>\n<p>clone 메소드는 기능적으로 하는 일이 없어보인다. <br/>\n그럼에도 불구하고 오버라이딩을 하는 이유는 <strong>Object 클래스의 clone 메소드에 선언된 접근 제어자가 protected</strong>이기 때문이다.<br/>\n이를 어디서든 접근 가능한 <strong>public으로 바꿔주는 작업</strong>이 필요하다. (Object 클래스는 java.lang 패키지므로 protectd면 접근 할 수 없음)</p>\n<ul>\n<li>오버라이딩에서 접근 제어자 변경은 <strong>제어 수준을 넓히는 것만 가능</strong>하다.</li>\n</ul>\n<h1 id=\"wrapper-클래스\" style=\"position:relative;\"><a href=\"#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"wrapper 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapper 클래스</h1>\n<p><strong>기본 자료형의 값을 감싸는 클래스</strong>이다. <strong>기본 자료형을 인스턴스화 시키기 위해</strong> 사용한다.</p>\n<h2 id=\"wrapper-클래스의-종류\" style=\"position:relative;\"><a href=\"#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A2%85%EB%A5%98\" aria-label=\"wrapper 클래스의 종류 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapper 클래스의 종류</h2>\n<p>모든 기본 자료형을 대상으로 래퍼 클래스가 정의되어있다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">기본 자료형</th>\n<th align=\"center\">Wrapper 클래스</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">boolean</td>\n<td align=\"center\">Boolean</td>\n</tr>\n<tr>\n<td align=\"center\">byte</td>\n<td align=\"center\">Byte</td>\n</tr>\n<tr>\n<td align=\"center\">char</td>\n<td align=\"center\">Character</td>\n</tr>\n<tr>\n<td align=\"center\">short</td>\n<td align=\"center\">Short</td>\n</tr>\n<tr>\n<td align=\"center\">int</td>\n<td align=\"center\">Integer</td>\n</tr>\n<tr>\n<td align=\"center\">long</td>\n<td align=\"center\">Long</td>\n</tr>\n<tr>\n<td align=\"center\">float</td>\n<td align=\"center\">Float</td>\n</tr>\n<tr>\n<td align=\"center\">double</td>\n<td align=\"center\">Double</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"박싱과-언박싱\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\" aria-label=\"박싱과 언박싱 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박싱과 언박싱</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">기본 자료형  -- Boxing --&gt; Wrapper 클래스\n+-------+               +---------+\n| byte  | &lt;-----------&gt; | Byte    |\n| short | &lt;-----------&gt; | Short   |\n| int   | &lt;-----------&gt; | Integer |\n| ...   | &lt;-----------&gt; | ...     |\n+-------+               +---------+\n         &lt;-- Unboxing --</code></pre></div>\n<h3 id=\"박싱boxing\" style=\"position:relative;\"><a href=\"#%EB%B0%95%EC%8B%B1boxing\" aria-label=\"박싱boxing permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>박싱(Boxing)</h3>\n<p><strong>기본형을 객체형으로 바꾸는 것</strong>을 <strong>박싱</strong>이라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span> iObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Double</span> dObj <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Double</span><span class=\"token punctuation\">(</span><span class=\"token number\">3.14</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"언박싱unboxing\" style=\"position:relative;\"><a href=\"#%EC%96%B8%EB%B0%95%EC%8B%B1unboxing\" aria-label=\"언박싱unboxing permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>언박싱(Unboxing)</h3>\n<p><strong>객체형을 기본형으로 꺼내는 것</strong>을 <strong>언박싱</strong>이라 한다. (Wrapper 클래스에서 따로 메소드를 제공한다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> iObj<span class=\"token punctuation\">.</span><span class=\"token function\">intValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span> num2 <span class=\"token operator\">=</span> dObj<span class=\"token punctuation\">.</span><span class=\"token function\">doubleValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<br/>\n<p>자바5부터는 박싱과 언박싱이 필요한 상황에서 이를 자동으로 처리하는 오토 박싱(Auto Boxing)과 오토 언박싱(Auto Unboxing)을 제공한다.</p>\n<h2 id=\"wrapper-클래스의-다양한-static-메소드\" style=\"position:relative;\"><a href=\"#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-static-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"wrapper 클래스의 다양한 static 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Wrapper 클래스의 다양한 static 메소드</h2>\n<h3 id=\"인스턴스-생성\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"인스턴스 생성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 생성</h3>\n<p><strong>valueOf 메소드</strong>를 통해 <strong>생성자를 사용하지 않고 Wrapper 클래스의 인스턴스를 생성</strong> 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span> n1 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token number\">999</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// new Integer(999);와 같음</span>\n<span class=\"token class-name\">Integer</span> n2 <span class=\"token operator\">=</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"1024\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 문자열 기반 Integer 인스턴스 생성</span></code></pre></div>\n<h3 id=\"대소-비교와-합-계산\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%86%8C-%EB%B9%84%EA%B5%90%EC%99%80-%ED%95%A9-%EA%B3%84%EC%82%B0\" aria-label=\"대소 비교와 합 계산 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대소 비교와 합 계산</h3>\n<h4 id=\"최대값-계산\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EB%8C%80%EA%B0%92-%EA%B3%84%EC%82%B0\" aria-label=\"최대값 계산 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최대값 계산</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">max</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 100</span></code></pre></div>\n<h4 id=\"최소값-계산\" style=\"position:relative;\"><a href=\"#%EC%B5%9C%EC%86%8C%EA%B0%92-%EA%B3%84%EC%82%B0\" aria-label=\"최소값 계산 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>최소값 계산</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">min</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 10</span></code></pre></div>\n<h4 id=\"합-계산\" style=\"position:relative;\"><a href=\"#%ED%95%A9-%EA%B3%84%EC%82%B0\" aria-label=\"합 계산 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>합 계산</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 110</span></code></pre></div>\n<h3 id=\"진법-변환\" style=\"position:relative;\"><a href=\"#%EC%A7%84%EB%B2%95-%EB%B3%80%ED%99%98\" aria-label=\"진법 변환 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>진법 변환</h3>\n<h4 id=\"10진수---2진수\" style=\"position:relative;\"><a href=\"#10%EC%A7%84%EC%88%98---2%EC%A7%84%EC%88%98\" aria-label=\"10진수   2진수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10진수 -> 2진수</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toBinaryString</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1010</span></code></pre></div>\n<h4 id=\"10진수---8진수\" style=\"position:relative;\"><a href=\"#10%EC%A7%84%EC%88%98---8%EC%A7%84%EC%88%98\" aria-label=\"10진수   8진수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10진수 -> 8진수</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toOctalString</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 12</span></code></pre></div>\n<h4 id=\"10진수---16진수\" style=\"position:relative;\"><a href=\"#10%EC%A7%84%EC%88%98---16%EC%A7%84%EC%88%98\" aria-label=\"10진수   16진수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10진수 -> 16진수</h4>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Integer</span><span class=\"token punctuation\">.</span><span class=\"token function\">toHaxString</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// a</span></code></pre></div>\n<h1 id=\"math-클래스\" style=\"position:relative;\"><a href=\"#math-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"math 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Math 클래스</h1>\n<p>Math 클래스는 기능의 제공이 목적이므로 <strong>모든 메소드가 static으로 정의</strong>되어 있다. (인스턴스 생성 목적이 아니다.)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 원주율</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2의 제곱근</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sqrt</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 파이에 대한 Degree</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDegrees</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2 파이에 대한 Degree</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">toDegrees</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.0</span> <span class=\"token operator\">*</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span>PI<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 라디안으로 변환</span>\n<span class=\"token keyword\">double</span> radian45 <span class=\"token operator\">=</span> <span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">radians</span><span class=\"token punctuation\">(</span><span class=\"token number\">45</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 싸인 45</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">sin</span><span class=\"token punctuation\">(</span>radian45<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 코싸인 45</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">cos</span><span class=\"token punctuation\">(</span>radian45<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 탄젠트 45</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">tan</span><span class=\"token punctuation\">(</span>radian45<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 로그 24</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 2의 16승</span>\n<span class=\"token class-name\">Math</span><span class=\"token punctuation\">.</span><span class=\"token function\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"난수-생성\" style=\"position:relative;\"><a href=\"#%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1\" aria-label=\"난수 생성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>난수 생성</h2>\n<p>난수는 <strong>무작위로 생성된 값</strong>을 말한다.<br/>\n컴퓨터는 주어진 명령을 실행하는 기계이기 때문에 이론적으로 <strong>난수를 생성할 수 없다.</strong><br/>\n컴퓨터에서 난수를 생성하기 위해서는 <strong>특정 알고리즘에 시드(seed) 값을 전달</strong>하여 그 알고리즘에 의해 난수를 만들어 내야한다.<br/>\n이런 형태로 만들어진 난수를 유사 난수라고 한다. 시드 값이 동일하면 동일한 난수를 만든다.<br/><br/></p>\n<p>자바에서는 난수의 생성을 위한 <strong>Random 클래스</strong>를 제공한다.<br/>\nRandom 클래스의 생성자에 별도의 시드 값을 넣어주지 않으면, <strong>시드 값으로 현재 시간을 넣어 난수를 생성</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Random</span> rand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nrand<span class=\"token punctuation\">.</span><span class=\"token function\">nextInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 0 이상 1000 미만 범위의 int형 난수 반환</span></code></pre></div>\n<h1 id=\"arrays-클래스\" style=\"position:relative;\"><a href=\"#arrays-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"arrays 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Arrays 클래스</h1>\n<p>java.util.Arrays는 여러 배열 조작에 도움을 주는 메소드를 제공한다.</p>\n<h2 id=\"배열-복사-메소드\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%82%AC-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"배열 복사 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 복사 메소드</h2>\n<h3 id=\"배열-복제\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%A0%9C\" aria-label=\"배열 복제 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 복제</h3>\n<p>Arrays 클래스의 정적 메소드 <strong>copyOf()</strong>을 사용해 <strong>배열을 복제</strong> 할 수 있다.</p>\n<div class=\"gatsby-code-title\">java.util.Arrays</div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// original에 전달된 배열을 첫 번째 요소부터 newLength의 길이만큼 복제</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> origianl<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> newLength<span class=\"token punctuation\">)</span> </code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"자바\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"기본 클래스\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"공부중\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dest <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> dest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">/*\n자바\n기본 클래스\n공부중\n*/</span></code></pre></div>\n<h3 id=\"배열-복사\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%82%AC\" aria-label=\"배열 복사 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 복사</h3>\n<p>System 클래스의 정적 메소드 <strong>arraycopy()</strong>를 이용하면 <strong>배열을 복사</strong> 할 수 있다.</p>\n<div class=\"gatsby-code-title\">java.lang.System</div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 배열 src의 srcPos에서 배열 dest의 destPos로 length 길이만큼 복사</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> src<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> srcPos<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span> dest<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> destPos<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> length<span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token string\">\"자바\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"기본 클래스\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"공부중\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dest <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span><span class=\"token function\">arraycopy</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> s <span class=\"token operator\">:</span> dest<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n자바\n기본 클래스\n공부중\n*/</span></code></pre></div>\n<h2 id=\"배열-요소-비교\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%EB%B9%84%EA%B5%90\" aria-label=\"배열 요소 비교 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 요소 비교</h2>\n<p>Arrays 클래스의 정적 메소드 <strong>equals()</strong>를 통해 <strong>배열의 요소를 비교</strong> 할 수 있다.<br/></p>\n<div class=\"gatsby-code-title\">java.util.Arrays</div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 매개변수 a와 a2로 전달된 배열의 내용을 비교하여 true 또는 false를 반환</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">,</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a2<span class=\"token punctuation\">)</span></code></pre></div>\n<p>이때 요소가 객체인 경우, Object 클래스의 <strong>equals 메소드를 호출하여 인스턴스를 비교</strong>하므로 equals 메소드가 오버라이딩 되어 있어야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..... 멤버 변수 선언, 생성자, getter, setter 생략 .....</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">boolean</span> <span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span> o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">==</span> animal<span class=\"token punctuation\">.</span>age <span class=\"token operator\">&amp;&amp;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>animal<span class=\"token punctuation\">.</span><span class=\"token function\">getName</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">ArraysClass</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> budu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dubu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span> kitty <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kitty\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>budu<span class=\"token punctuation\">,</span> kitty<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> dest <span class=\"token operator\">=</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">copyOf</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> src<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"src와 dest는 서로 %s 배열입니다.\"</span><span class=\"token punctuation\">,</span> \n            <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">)</span> <span class=\"token operator\">?</span> <span class=\"token string\">\"같은\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"다른\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\nsrc와 dest는 서로 같은 배열입니다.\n*/</span></code></pre></div>\n<h2 id=\"배열-정렬\" style=\"position:relative;\"><a href=\"#%EB%B0%B0%EC%97%B4-%EC%A0%95%EB%A0%AC\" aria-label=\"배열 정렬 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>배열 정렬</h2>\n<p>Arrays 클래스의 정적 메소드 <strong>sort()</strong>를 통해 <strong>배열의 요소를 정렬</strong> 할 수 있다.<br/></p>\n<div class=\"gatsby-code-title\">java.util.Arrays</div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">sort</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이때 요소가 객체인 경우, <strong>Comparable 인터페이스의 compareTo() 메소드가 구현</strong> 되어 있어야 한다.</p>\n<div class=\"gatsby-code-title\">java.lang.Comparable</div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">/*\n- 인자로 전달된 o가 작다면 양의 정수 반환\n- 인자로 전달된 o가 크다면 음의 정수 반환\n- 인자로 전달된 o와 같다면 0 반환\n*/</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Animal</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Comparable</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ..... 멤버 변수 선언, 생성자, getter, setter 생략 .....</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> o<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> animal <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span><span class=\"token punctuation\">)</span>o<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>age <span class=\"token operator\">-</span> animal<span class=\"token punctuation\">.</span><span class=\"token function\">getAge</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// ..... toString 메소드 생략 .....</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">EqualsInstance</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token class-name\">Animal</span> budu <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dubu\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span> kitty <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kitty\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token class-name\">Animal</span> bunny <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bunny\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token class-name\">Animal</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> src <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>budu<span class=\"token punctuation\">,</span> kitty<span class=\"token punctuation\">,</span> bunny<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// 배열 정렬</span>\n        <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Animal</span> a <span class=\"token operator\">:</span> src<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">/*\n이름은 kitty 나이는 2살\n이름은 dubu 나이는 3살\n이름은 bunny 나이는 5살\n*/</span></code></pre></div>\n<h1 id=\"reference\" style=\"position:relative;\"><a href=\"#reference\" aria-label=\"reference permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reference</h1>\n<ul>\n<li><a href=\"http://www.yes24.com/Product/Goods/43755519?OzSrank=1\" target=\"_blank\" rel=\"noreferrer noopener\">윤성우의 열혈 Java 프로그래밍</a></li>\n<li><a href=\"http://www.yes24.com/Product/Goods/62281686?OzSrank=7\" target=\"_blank\" rel=\"noreferrer noopener\">Do it! 자바 프로그래밍 입문</a></li>\n</ul>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/programming/java-default-class/#object-%ED%81%B4%EB%9E%98%EC%8A%A4\">Object 클래스</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/programming/java-default-class/#tostring-%EB%A9%94%EC%86%8C%EB%93%9C\">toString 메소드</a></li>\n<li><a href=\"/programming/java-default-class/#equals-%EB%A9%94%EC%86%8C%EB%93%9C\">equals 메소드</a></li>\n<li><a href=\"/programming/java-default-class/#clone-%EB%A9%94%EC%86%8C%EB%93%9C\">clone 메소드</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-default-class/#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4\">Wrapper 클래스</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A2%85%EB%A5%98\">Wrapper 클래스의 종류</a></li>\n<li>\n<p><a href=\"/programming/java-default-class/#%EB%B0%95%EC%8B%B1%EA%B3%BC-%EC%96%B8%EB%B0%95%EC%8B%B1\">박싱과 언박싱</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#%EB%B0%95%EC%8B%B1boxing\">박싱(Boxing)</a></li>\n<li><a href=\"/programming/java-default-class/#%EC%96%B8%EB%B0%95%EC%8B%B1unboxing\">언박싱(Unboxing)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-default-class/#wrapper-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%8B%A4%EC%96%91%ED%95%9C-static-%EB%A9%94%EC%86%8C%EB%93%9C\">Wrapper 클래스의 다양한 static 메소드</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\">인스턴스 생성</a></li>\n<li>\n<p><a href=\"/programming/java-default-class/#%EB%8C%80%EC%86%8C-%EB%B9%84%EA%B5%90%EC%99%80-%ED%95%A9-%EA%B3%84%EC%82%B0\">대소 비교와 합 계산</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#%EC%B5%9C%EB%8C%80%EA%B0%92-%EA%B3%84%EC%82%B0\">최대값 계산</a></li>\n<li><a href=\"/programming/java-default-class/#%EC%B5%9C%EC%86%8C%EA%B0%92-%EA%B3%84%EC%82%B0\">최소값 계산</a></li>\n<li><a href=\"/programming/java-default-class/#%ED%95%A9-%EA%B3%84%EC%82%B0\">합 계산</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-default-class/#%EC%A7%84%EB%B2%95-%EB%B3%80%ED%99%98\">진법 변환</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#10%EC%A7%84%EC%88%98---2%EC%A7%84%EC%88%98\">10진수 -> 2진수</a></li>\n<li><a href=\"/programming/java-default-class/#10%EC%A7%84%EC%88%98---8%EC%A7%84%EC%88%98\">10진수 -> 8진수</a></li>\n<li><a href=\"/programming/java-default-class/#10%EC%A7%84%EC%88%98---16%EC%A7%84%EC%88%98\">10진수 -> 16진수</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-default-class/#math-%ED%81%B4%EB%9E%98%EC%8A%A4\">Math 클래스</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#%EB%82%9C%EC%88%98-%EC%83%9D%EC%84%B1\">난수 생성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-default-class/#arrays-%ED%81%B4%EB%9E%98%EC%8A%A4\">Arrays 클래스</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-default-class/#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%82%AC-%EB%A9%94%EC%86%8C%EB%93%9C\">배열 복사 메소드</a></p>\n<ul>\n<li><a href=\"/programming/java-default-class/#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%A0%9C\">배열 복제</a></li>\n<li><a href=\"/programming/java-default-class/#%EB%B0%B0%EC%97%B4-%EB%B3%B5%EC%82%AC\">배열 복사</a></li>\n</ul>\n</li>\n<li><a href=\"/programming/java-default-class/#%EB%B0%B0%EC%97%B4-%EC%9A%94%EC%86%8C-%EB%B9%84%EA%B5%90\">배열 요소 비교</a></li>\n<li><a href=\"/programming/java-default-class/#%EB%B0%B0%EC%97%B4-%EC%A0%95%EB%A0%AC\">배열 정렬</a></li>\n</ul>\n</li>\n<li><a href=\"/programming/java-default-class/#reference\">Reference</a></li>\n</ul>","frontmatter":{"title":"기본 클래스","date":"July 05, 2020","category":"Java","tags":["Java"],"featuredImage":{"childImageSharp":{"original":{"src":"/static/thumbnail-b485c0608dd48ef901ca76e61ea52b68.png","width":1200,"height":350}}}}}},"pageContext":{"slug":"/programming/java-default-class","previous":{"id":"93679e47-b300-5fff-9e07-6e3f2e296d7b","fields":{"slug":"/programming/java-basic-3"},"frontmatter":{"title":"Java 기초 - 3","tags":["Java"]}},"next":{"id":"ac2c3596-617d-5ab9-8616-f08d4b9510fe","fields":{"slug":"/devops/docker-mysql"},"frontmatter":{"title":"mysql 컨테이너 생성하기","tags":["Docker","mysql"]}}}}}