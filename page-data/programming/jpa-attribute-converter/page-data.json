{"componentChunkName":"component---src-templates-post-js","path":"/programming/jpa-attribute-converter","result":{"data":{"site":{"siteMetadata":{"author":"Inkyung"}},"markdownRemark":{"fields":{"slug":"/programming/jpa-attribute-converter"},"id":"8762191f-28f8-5670-945c-0d2e6a273104","excerpt":"서론 JPA의 entity class에 열거형으로 정의된 값을  어노테이션을 사용하여 저장할 경우 옵션에 따른 선택지는 아래와 같다.  : 상수가 정의된 순서가 저장된다. enum의 값이 추가될 경우, 에러 발생의 가능성이 크므로 EnumType.STRING…","html":"<h1 id=\"서론\" style=\"position:relative;\"><a href=\"#%EC%84%9C%EB%A1%A0\" aria-label=\"서론 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>서론</h1>\n<p>JPA의 entity class에 열거형으로 정의된 값을 <code class=\"language-text\">@Enumerated</code> 어노테이션을 사용하여 저장할 경우 옵션에 따른 선택지는 아래와 같다.</p>\n<ul>\n<li><code class=\"language-text\">EnumType.ORDINAL</code> : 상수가 정의된 순서가 저장된다. enum의 값이 추가될 경우, 에러 발생의 가능성이 크므로 EnumType.STRING을 사용 하는 것이 좋다.</li>\n<li><code class=\"language-text\">EnumType.STRING</code> : 상수 이름 그대로 문자열 컬럼에 저장된다</li>\n</ul>\n<p>하지만 <code class=\"language-text\">EnumType.STRING</code> 역시도 상수의 이름이 변경되면 기존 DB 데이터와 매핑되지 않는 이슈가 발생된다.<br/>\n또한 상수 값을 데이터베이스에 문자열 그대로 저장할 경우, 쓸데없는 데이터 공간의 낭비가 발생되므로 성능에 좋지 못한 방법이다.</p>\n<h1 id=\"attributeconverter-사용하기\" style=\"position:relative;\"><a href=\"#attributeconverter-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"attributeconverter 사용하기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>AttributeConverter 사용하기</h1>\n<p>JPA에서는 JDBC 타입을 자바 클래스에 쉽게 매핑 할 수 있도록 <code class=\"language-text\">AttributeConverter</code> 인터페이스를 제공해준다.</p>\n<ol>\n<li>enum 생성</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">enum</span> <span class=\"token class-name\">UserRole</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">USER</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">MANAGER</span><span class=\"token punctuation\">(</span><span class=\"token number\">99</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">private</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> value<span class=\"token punctuation\">;</span>\n\n    <span class=\"token class-name\">UserRole</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value <span class=\"token operator\">=</span> value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token class-name\">UserRole</span> <span class=\"token function\">findByValue</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> value<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> \n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">Arrays</span><span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserRole</span><span class=\"token punctuation\">.</span><span class=\"token function\">values</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n                     <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>v <span class=\"token operator\">-></span> v<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> value<span class=\"token punctuation\">)</span>\n                     <span class=\"token punctuation\">.</span><span class=\"token function\">findAny</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">orElse</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"2\">\n<li>AttributeConverter 인터페이스 구현</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Convert</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">UserRoleConverter</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">AttributeConverter</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">UserRole</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">Integer</span><span class=\"token punctuation\">></span></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">Integer</span> <span class=\"token function\">convertToDatabaseColumn</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">UserRole</span> attribute<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>attribute <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> attribute<span class=\"token punctuation\">.</span><span class=\"token function\">getValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token annotation punctuation\">@Override</span>\n    <span class=\"token keyword\">public</span> <span class=\"token class-name\">UserRole</span> <span class=\"token function\">convertToEntityAttribute</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Integer</span> dbData<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>dbData <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> <span class=\"token class-name\">UserRole</span><span class=\"token punctuation\">.</span><span class=\"token function\">findByValue</span><span class=\"token punctuation\">(</span>dbData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ol start=\"3\">\n<li>entity에서 사용하기</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token annotation punctuation\">@Entity</span> \n<span class=\"token annotation punctuation\">@NoArgsConstructor</span><span class=\"token punctuation\">(</span>access <span class=\"token operator\">=</span> PROTECTED<span class=\"token punctuation\">)</span>\n<span class=\"token annotation punctuation\">@Getter</span>\n<span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">User</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">BaseEntity</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n    <span class=\"token annotation punctuation\">@Convert</span><span class=\"token punctuation\">(</span>converter <span class=\"token operator\">=</span> <span class=\"token class-name\">UserRoleConverter</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">private</span> <span class=\"token class-name\">UserRole</span> role<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"참고\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EA%B3%A0\" aria-label=\"참고 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참고</h1>\n<ul>\n<li><a href=\"https://www.baeldung.com/jpa-persisting-enums-in-jpa\" target=\"_blank\" rel=\"noreferrer\">Baeldung</a></li>\n</ul>","tableOfContents":"<ul>\n<li><a href=\"/programming/jpa-attribute-converter/#%EC%84%9C%EB%A1%A0\">서론</a></li>\n<li><a href=\"/programming/jpa-attribute-converter/#attributeconverter-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\">AttributeConverter 사용하기</a></li>\n<li><a href=\"/programming/jpa-attribute-converter/#%EC%B0%B8%EA%B3%A0\">참고</a></li>\n</ul>","frontmatter":{"title":"AttributeConverter를 이용해 데이터 타입을 변환하여 저장하기","date":"August 09, 2020","category":"JPA","tags":["Java","JPA"],"featuredImage":{"childImageSharp":{"original":{"src":"/static/thumbnail-75af4c51e191774b88def1fe4a619554.png","width":1300,"height":400}}}}}},"pageContext":{"slug":"/programming/jpa-attribute-converter","previous":{"id":"a4ff1a2c-f035-5771-886a-cf1a147dbf21","fields":{"slug":"/project/gatsby-blog-start"},"frontmatter":{"title":"Gatsby로 블로그 만들기","tags":["Gatsby","React","Blog"]}},"next":{"id":"c91c3d7e-5dc2-584d-83af-a88fbf8f06bc","fields":{"slug":"/programming/react-antd-customizing"},"frontmatter":{"title":"CRA 프로젝트에서 Ant Design 커스터마이징하기","tags":["React","Antd"]}}}}}