{"componentChunkName":"component---src-templates-post-tsx","path":"/programming/javascript-data-type","result":{"data":{"site":{"siteMetadata":{"author":"Inkyung"}},"markdownRemark":{"fields":{"slug":"/programming/javascript-data-type"},"id":"ffcbd16f-cfe5-5dde-b75f-c36baa57d0cc","excerpt":"모던 자바스크립트 Deep Dive…","html":"<blockquote>\n<p><a href=\"http://www.yes24.com/Product/Goods/92742567\" target=\"_blank\" rel=\"noreferrer noopener\">모던 자바스크립트 Deep Dive</a>를 읽고 학습한 내용을 간략하게 정리한 글입니다.<br/>\n자바스크립트 기본 개념과 동작 원리를 잘 다루고 있는 책입니다. 상세한 내용은 책을 참고해주세요.</p>\n</blockquote>\n<h1 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수</h1>\n<p>변수는 값을 저장하기 위해 확보한 메모리 공간에 붙인 이름으로, <strong>메모리 공간을 식별하기 위한 식별자</strong>다.<br/>\n변수가 기억하는 값은 실제 값이 아닌 <strong>메모리 공간의 주소 값</strong>으로,\n컴파일러 혹은 인터프리터에 의해 값이 저장된 <strong>메모리 공간의 주소로 치환되어서 사용</strong>된다.<br/>\n변수를 사용하기 위해서는 먼저 변수 선언을 하여 자바스크립트 엔진에게 식별자의 존재를 알려야한다.<br/></p>\n<h3 id=\"변수-선언\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\" aria-label=\"변수 선언 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 선언</h3>\n<p>변수 선언이란 값을 저장하기 위해 <strong>메모리 공간을 확보</strong>하고 <strong>변수 이름과 확보된 메모리 공간의 주소를 연결(name binding)</strong>해서\n<strong>값을 저장 할 수 있게 준비하는 것</strong>을 말한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a<span class=\"token punctuation\">;</span></code></pre></div>\n<p>자바스크립트는 <strong>예약된 키워드(var, let, const)를 사용해 변수를 선언</strong>한다.<br/>\n정적 타입 언어와는 달리 변수를 선언할 때 타입을 선언하지 않으며 <strong>어떤 타입의 값이라도 자유롭게 할당</strong> 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number</span>\na <span class=\"token operator\">=</span> <span class=\"token string\">'안녕'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// string</span></code></pre></div>\n<h3 id=\"선언된-변수는-어떻게-관리될까\" style=\"position:relative;\"><a href=\"#%EC%84%A0%EC%96%B8%EB%90%9C-%EB%B3%80%EC%88%98%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B4%80%EB%A6%AC%EB%90%A0%EA%B9%8C\" aria-label=\"선언된 변수는 어떻게 관리될까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>선언된 변수는 어떻게 관리될까?</h3>\n<p>변수 이름을 비롯한 모든 식별자는 <strong>실행 컨텍스트</strong>에 등록된다.<br/>\n실행 컨텍스트는 <strong>자바스크립트 엔진이 소스 코드를 평가하고 실행하기 위해 필요한 환경을 제공하고 코드의 실행 결과를 실제로 관리하는 영역</strong>이다.<br/>\n자바스크립트 엔진은 <strong>실행 컨텍스트를 통해 식별자와 스코프를 관리</strong>한다.<br/>\n변수 이름과 변수 값은 <strong>실행 컨텍스트의 key-value 형식인 객체(렉시컬 환경)</strong>에 등록되어 관리된다.</p>\n<h3 id=\"변수-선언의-실행-시점과-변수-호이스팅\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%8B%9C%EC%A0%90%EA%B3%BC-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85\" aria-label=\"변수 선언의 실행 시점과 변수 호이스팅 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수 선언의 실행 시점과 변수 호이스팅</h3>\n<p>자바스크립트 엔진은 <strong>런타임 이전에 소스 코드의 평가 과정</strong>을 거치면서 소스 코드를 실행하기 위한 준비를 한다.<br/>\n이때 소스 코드 실행을 위한 준비 단계인 <strong>평가 과정에서 변수 선언을 포함한 모든 선언문을 소스 코드에서 찾아내 먼저 실행</strong>한다.<br/>\n그리고 평가 과정이 끝나면 <strong>선언문을 제외한 소스 코드를 한 줄씩 순차적으로 실행</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 1</span></code></pre></div>\n<p>위 코드에서 변수 a를 선언문 코드 이전에 참조해도 에러가 뜨지 않고 undefined로 참조 가능한 이유 역시 평가 단계에서 이미 선언문이 실행되고 선언과 동시에 undefined로 초기화되었기 때문이다.<br/>\n(참고로 var 키워드는 선언과 동시에 암묵적으로 undefined로 초기화가 이뤄지는 반면, let과 const는 선언과 초기화가 분리되어 진행된다. 그렇지만 호이스팅이 발생하는 것은 마찬가지다. 자세한 내용은 <a href=\"https://github.com/6unhkui/programming/javascript-variable-keyword\" target=\"_blank\" rel=\"noreferrer noopener\">var, let, const 키워드의 차이점</a>에서 정리한다.)<br/>\n이렇듯 마치 <strong>변수 선언문이 코드 최상단으로 끌어올려진 것처럼 동작하는 자바스크립트의 고유한 특징</strong>을 <strong>변수 호이스팅</strong>이라고 한다.<br/>\n호이스팅은 변수 뿐만 아니라 var, let, const, function, class 키워드로 선언한 모든 선언문에서 일어난다.<br/></p>\n<h1 id=\"data-types\" style=\"position:relative;\"><a href=\"#data-types\" aria-label=\"data types permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data Types</h1>\n<p>자바스크립트(ES6)는 원시 타입(Primitive Type) 6개와 객체 타입(Object Type)을 제공한다.</p>\n<h2 id=\"원시-타입primitive-type\" style=\"position:relative;\"><a href=\"#%EC%9B%90%EC%8B%9C-%ED%83%80%EC%9E%85primitive-type\" aria-label=\"원시 타입primitive type permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>원시 타입(Primitive Type)</h2>\n<p>원시 타입 데이터는 변수에 할당 될 때 메모리 상에 <strong>고정된 크기로 저장되고 메모리 공간엔 실제 값을 보관</strong>한다.<br/><br/>\n원시 타입은 <strong>변경 불가능한 값(immutable value)</strong>이다. 여기서 변경 불가능한 값이라는 것은 변수에 다른 값을 할당 할 수 없다는 것이 아니라 변수와 바인딩 된 메모리 공간에 저장된 원시 값 자체를 변경 될 수 없다는 것을 의미한다. 값이 변경되면 새로운 메모리 공간에 변경된 값이 저장되고 변수는 새로운 메모리 공간 주소 값을 바인딩한다. 즉, <strong>값의 변경은 재할당</strong>을 통해 이뤄지는 것이다.<br/><br/></p>\n<p>원시 타입 변수를 복사할 경우에는 <strong>실제 값이 복사되어 전달</strong>된다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> origin <span class=\"token operator\">=</span> <span class=\"token number\">123</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> copy <span class=\"token operator\">=</span> origin<span class=\"token punctuation\">;</span>\norigin <span class=\"token operator\">=</span> <span class=\"token number\">456</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 123</span></code></pre></div>\n<p>origin 변수와 copy 변수는 서로 다른 메모리 공간을 가지고 있기 때문에, origin 변수의 값이 변경되도 copy 변수에 영향을 주지 않는다.</p>\n<h3 id=\"1-number\" style=\"position:relative;\"><a href=\"#1-number\" aria-label=\"1 number permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. Number</h3>\n<p>자바스크립트는 모든 숫자를 <strong>실수</strong>로 처리하며, 정수로만 표현하기 위한 데이터 타입은 존재하지 않는다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">typeof</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// number</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">===</span> <span class=\"token number\">1.0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<p>이 외에도 3가지 상징적인 값도 표현 할 수 있다.</p>\n<ol>\n<li>Infinity : 양의 무한대</li>\n<li>-Infinity : 음의 무한대</li>\n<li>NaN(Not A Number) : 산술 연산 불가</li>\n</ol>\n<h3 id=\"2-string\" style=\"position:relative;\"><a href=\"#2-string\" aria-label=\"2 string permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. String</h3>\n<p>자바스크립트에서 String은 원시 타입이다. 또한 문자와 문자열을 구분 짓지 않고 String 타입으로 관리한다.<br/>\n표현 방식은 <strong>작은 따옴표(''), 큰 따옴표(\"\"), 백틱 기호(``)</strong>로 텍스트를 감싸면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> str<span class=\"token punctuation\">;</span>\nstr <span class=\"token operator\">=</span> <span class=\"token string\">'문자열'</span><span class=\"token punctuation\">;</span>\nstr <span class=\"token operator\">=</span> <span class=\"token string\">\"문자열\"</span><span class=\"token punctuation\">;</span>\nstr <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">문자열</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"3-boolean\" style=\"position:relative;\"><a href=\"#3-boolean\" aria-label=\"3 boolean permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. Boolean</h3>\n<p>참(ture)과 거짓(false)으로 이루어져 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> bool <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\nbool <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">></span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bool<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<h3 id=\"4-undefined\" style=\"position:relative;\"><a href=\"#4-undefined\" aria-label=\"4 undefined permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. undefined</h3>\n<p><strong>var 키워드로 선언된 변수에 암묵적으로 할당되는 값</strong>이다. <br/>\n실제 값이 할당되기 전까지 메모리 공간에 저장되어 있는 값이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token keyword\">var</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"5-null\" style=\"position:relative;\"><a href=\"#5-null\" aria-label=\"5 null permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. null</h3>\n<p><strong>값이 없다는 것을 의도적으로 명시</strong>할 때 사용하는 값이다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> a <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\na <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// null</span></code></pre></div>\n<h3 id=\"6-symbol\" style=\"position:relative;\"><a href=\"#6-symbol\" aria-label=\"6 symbol permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. Symbol</h3>\n<p>심볼은 <strong>유일한 식별자</strong>를 만들고 싶을 때 사용한다.<br/>\n주로 <strong>객체의 프로퍼티 키를 유일한 프로퍼티 키로 만들기 위해</strong> 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> id <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> id2 <span class=\"token operator\">=</span> <span class=\"token function\">Symbol</span><span class=\"token punctuation\">(</span><span class=\"token string\">'id'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>id <span class=\"token operator\">===</span> id2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>\n<br/>\n<h2 id=\"객체-타입object-type\" style=\"position:relative;\"><a href=\"#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85object-type\" aria-label=\"객체 타입object type permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>객체 타입(Object Type)</h2>\n<p>다른 말로 <strong>참조 타입(Reference Type)</strong>이라 부른다.<br/>\n객체 타입 데이터는 <strong>메모리 공간의 크기를 사전에 정해둘 수 없으며</strong>, 변수에는 <strong>heap에 저장된 객체의 참조 값</strong>이 저장된다.<br/><br/></p>\n<p>객체 타입은 원시 타입과는 달리 <strong>변경 가능한 값(mutable value)</strong>이다.<br/>\n<strong>값의 재할당 없이도 프로퍼티 값을 추가, 수정, 삭제</strong> 할 수 있다.\n객체를 생성하고 관리하는 방식은 매우 복잡하고 비용이 많이 든다. 객체를 변경 할 때마다 원시 값처럼 이전 값을 복사해서 새롭게 생성하는 것은 메모리의 효율적 소비가 어렵고 성능이 나빠지기 때문에 변경 가능한 값으로 설계된 것이다. 원시 값과 달리 여러개의 식별자가 하나의 객체를 공유 할 수 있다.\n<br/><br/></p>\n<p>객체 타입 변수를 복사할 경우에는 <strong>참조 값이 복사되어 전달</strong>된다.<br/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> origin <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name <span class=\"token operator\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> copy <span class=\"token operator\">=</span> origin<span class=\"token punctuation\">;</span>\norigin<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Serina'</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>copy<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'Serina'</span></code></pre></div>\n<p>origin 변수와 copy 변수의 메모리 공간의 주소 값은 다르지만 그 메모리에 저장된 참조 값은 동일하다.<br/>\n즉 <strong>하나의 객체를 공유</strong>하게 되는 것이다.</p>\n<h2 id=\"정리\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%A6%AC\" aria-label=\"정리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정리</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\"></th>\n<th align=\"center\">원시 타입</th>\n<th align=\"center\">객체 타입</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">종류</td>\n<td align=\"center\">number, string, boolean, undefined, null, symbol</td>\n<td align=\"center\">객체, 함수, 배열, 정규 표현식 등</td>\n</tr>\n<tr>\n<td align=\"center\">변경 여부</td>\n<td align=\"center\">변경 불가능한 값</td>\n<td align=\"center\">변경 가능한 값</td>\n</tr>\n<tr>\n<td align=\"center\">메모리 공간에 저장된 값</td>\n<td align=\"center\">실제 값 저장</td>\n<td align=\"center\">참조 값 저장</td>\n</tr>\n<tr>\n<td align=\"center\">변수를 복사할 경우</td>\n<td align=\"center\">실제 값을 복사하여 전달</td>\n<td align=\"center\">참조 값을 복사하여 전달</td>\n</tr>\n</tbody>\n</table>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/programming/javascript-data-type/#%EB%B3%80%EC%88%98\">변수</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/programming/javascript-data-type/#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8\">변수 선언</a></li>\n<li><a href=\"/programming/javascript-data-type/#%EC%84%A0%EC%96%B8%EB%90%9C-%EB%B3%80%EC%88%98%EB%8A%94-%EC%96%B4%EB%96%BB%EA%B2%8C-%EA%B4%80%EB%A6%AC%EB%90%A0%EA%B9%8C\">선언된 변수는 어떻게 관리될까?</a></li>\n<li><a href=\"/programming/javascript-data-type/#%EB%B3%80%EC%88%98-%EC%84%A0%EC%96%B8%EC%9D%98-%EC%8B%A4%ED%96%89-%EC%8B%9C%EC%A0%90%EA%B3%BC-%EB%B3%80%EC%88%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85\">변수 선언의 실행 시점과 변수 호이스팅</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/javascript-data-type/#data-types\">Data Types</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/javascript-data-type/#%EC%9B%90%EC%8B%9C-%ED%83%80%EC%9E%85primitive-type\">원시 타입(Primitive Type)</a></p>\n<ul>\n<li><a href=\"/programming/javascript-data-type/#1-number\">1. Number</a></li>\n<li><a href=\"/programming/javascript-data-type/#2-string\">2. String</a></li>\n<li><a href=\"/programming/javascript-data-type/#3-boolean\">3. Boolean</a></li>\n<li><a href=\"/programming/javascript-data-type/#4-undefined\">4. undefined</a></li>\n<li><a href=\"/programming/javascript-data-type/#5-null\">5. null</a></li>\n<li><a href=\"/programming/javascript-data-type/#6-symbol\">6. Symbol</a></li>\n</ul>\n</li>\n<li><a href=\"/programming/javascript-data-type/#%EA%B0%9D%EC%B2%B4-%ED%83%80%EC%9E%85object-type\">객체 타입(Object Type)</a></li>\n<li><a href=\"/programming/javascript-data-type/#%EC%A0%95%EB%A6%AC\">정리</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"변수와 자료형","date":"December 01, 2020","category":"Javascript","tags":["Javascript","Book"],"featuredImage":{"childImageSharp":{"original":{"src":"/static/thumbnail-9c7858c3cc94ee3a2a0ef3939739ca67.png","width":1400,"height":350}}}}}},"pageContext":{"slug":"/programming/javascript-data-type","previous":{"id":"8ebfaa81-ab1d-5132-aa74-8476007f99e3","fields":{"slug":"/programming/javascript-execution-context"},"frontmatter":{"title":"실행 컨텍스트","tags":["Javascript","Book"]}},"next":{"id":"f372d536-6704-548d-abc3-49771ca6cdc2","fields":{"slug":"/programming/javascript-function"},"frontmatter":{"title":"함수","tags":["Javascript","Book"]}}}}}