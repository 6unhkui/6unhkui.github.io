{"componentChunkName":"component---src-templates-post-tsx","path":"/programming/java-memory-model","result":{"data":{"site":{"siteMetadata":{"author":"Inkyung"}},"markdownRemark":{"fields":{"slug":"/programming/java-memory-model"},"id":"90fce47a-eaa2-5ad0-a20a-6ec64d5cc9fd","excerpt":"윤성우의 열혈 Java 프로그래밍를 읽고 학습한 내용을 간략하게 정리한 글입니다. 프로그래밍 시작을 위한 최소한의 준비 Java로 프로그래밍을 하기 위해서는 우선 개발자 컴퓨터에 JDK가 설치되어 있어야 한다.\nJDK는 Java Development Kit의 약자로, Java…","html":"<blockquote>\n<p><a href=\"http://www.yes24.com/Product/Goods/43755519?OzSrank=1\" target=\"_blank\" rel=\"noreferrer noopener\">윤성우의 열혈 Java 프로그래밍</a>를 읽고 학습한 내용을 간략하게 정리한 글입니다.<br/></p>\n</blockquote>\n<h1 id=\"프로그래밍-시작을-위한-최소한의-준비\" style=\"position:relative;\"><a href=\"#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%8B%9C%EC%9E%91%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%B5%9C%EC%86%8C%ED%95%9C%EC%9D%98-%EC%A4%80%EB%B9%84\" aria-label=\"프로그래밍 시작을 위한 최소한의 준비 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>프로그래밍 시작을 위한 최소한의 준비</h1>\n<p>Java로 프로그래밍을 하기 위해서는 우선 개발자 컴퓨터에 JDK가 설치되어 있어야 한다.<br/>\nJDK는 Java Development Kit의 약자로, Java 개발에 필요한 많은 도구를 내장하고 있다.<br/>\nJDK 설치 방법은 아래를 참고한다. (* Windows OS 기준)</p>\n<h3 id=\"1-jdk-다운로드\" style=\"position:relative;\"><a href=\"#1-jdk-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C\" aria-label=\"1 jdk 다운로드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. JDK 다운로드</h3>\n<p><a href=\"https://www.oracle.com/java/technologies/javase-downloads.html\" target=\"_blank\" rel=\"noreferrer noopener\">링크</a>에서 본인의 컴퓨터 환경에 맞게 JDK 설치 파일 다운로드</p>\n<h3 id=\"2-jdk-설치\" style=\"position:relative;\"><a href=\"#2-jdk-%EC%84%A4%EC%B9%98\" aria-label=\"2 jdk 설치 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. JDK 설치</h3>\n<p>JDK가 설치된 경로의 bin 디렉토리로 이동하면, javac.exe와 java.exe 파일을 확인 할 수 있다.<br/>\n이 두 파일은 명령 프롬프트의 어느 경로에서든 실행이 가능해야하므로 이 파일들이 설치된 경로를 환경 변수 Path로 설정 해야한다.</p>\n<ul>\n<li><code class=\"language-text\">javac.exe</code> : <strong>자바 컴파일러</strong> <br/>\njava 파일을 class 파일로 컴파일 시켜준다.</li>\n<li><code class=\"language-text\">java.exe</code> : <strong>자바 런처</strong> <br/>\nJVM을 구동시키고, JVM 위에 Java Program을 올리는 초기 준비를 해준다.</li>\n</ul>\n<h3 id=\"3-환경-변수-path-설정\" style=\"position:relative;\"><a href=\"#3-%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-path-%EC%84%A4%EC%A0%95\" aria-label=\"3 환경 변수 path 설정 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. 환경 변수 Path 설정</h3>\n<ol>\n<li>내 PC 오른쪽 버튼 클릭 → 속성 → 시스템 → 고급 시스템 설정 → [고급] 탭의 [환경 변수] 클릭</li>\n<li>path라는 변수 명으로 javac.exe, java.exe가 다운로드 되어있는 경로를 환경 변수로 지정한다.</li>\n</ol>\n<h1 id=\"자바-프로그램과-실행-원리\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B3%BC-%EC%8B%A4%ED%96%89-%EC%9B%90%EB%A6%AC\" aria-label=\"자바 프로그램과 실행 원리 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 프로그램과 실행 원리</h1>\n<p>일반적인 프로그램은 OS 위에서 동작한다. 그렇기 때문에 OS에 맞춰 프로그램의 구현 방식도 달라진다.<br/>\n자바는 자바 프로그램과 시스템 사이에 JVM이라는 프로세스를 동작시켜 운영체제 별로 존재하는 차이점을 해결해준다.<br/>\nJVM 역시 하나의 프로그램이고, 운영체제 위에서 동작하기 때문에 운영체제 별로 JVM이 다르다.</p>\n<h3 id=\"자바-프로그램의-실행-구조\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B5%AC%EC%A1%B0\" aria-label=\"자바 프로그램의 실행 구조 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 프로그램의 실행 구조</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+----------------------+\n|        Program       |\n+----------------------+\n| Java Virtual Machine | // OS별로 존재하는 차이점을 JVM이 중간에서 해결해줌\n|         (JVM)        |    =&gt; 운영체제에 상관 없이 프로그램이 실행된다\n+----------------------+    \n|          OS          |\n+----------------------+\n|        Hardware      |\n+----------------------+</code></pre></div>\n<h3 id=\"jvm-구성\" style=\"position:relative;\"><a href=\"#jvm-%EA%B5%AC%EC%84%B1\" aria-label=\"jvm 구성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>JVM 구성</h3>\n<ol>\n<li><strong>자바 인터프리터</strong><br/>\n자바는 바이트 코드를 읽고 해석하는 인터프리터 언어임. JVM이 그 역할을 함</li>\n<li><strong>클래스 로더</strong><br/>\n동적으로 클래스를 로딩시켜줌</li>\n<li><strong>JIT (Just-In-Time) 컴파일러</strong><br/>\n런타임시 가상 기계 상에서만 돌아가는 자바 바이트 코드를 해당 플랫폼에 맞는 기계어로 변환해줌</li>\n<li><strong>가비지 컬렉터</strong><br/>\n사용하지 않는 메모리를 회수해줌</li>\n</ol>\n<h3 id=\"자바-컴파일러와-바이트-코드\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%99%80-%EB%B0%94%EC%9D%B4%ED%8A%B8-%EC%BD%94%EB%93%9C\" aria-label=\"자바 컴파일러와 바이트 코드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 컴파일러와 바이트 코드</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">+-----------+          +------------+\n| test.java | -------&gt; | test.class |\n+-----------+  컴파일러  +------------+\n 소스코드 파일               클래스 파일\n                    (자바 바이트코드로 이뤄짐)</code></pre></div>\n<p>자바 컴파일러는 소스 코드 파일을 <strong>자바 가상 머신이 이해할 수 있는 '자바 바이트 코드'로 변환</strong>시켜 준다.</p>\n<ul>\n<li>자바 바이트 코드 : <strong>명령문</strong>이라고도 하며, 크기가 기본적으로 <strong>1바이트 단위</strong>여서 자바 바이트 코드라 한다.</li>\n</ul>\n<h1 id=\"자바-코드-살펴보기\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94-%EC%BD%94%EB%93%9C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"자바 코드 살펴보기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바 코드 살펴보기</h1>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">HelloWorld</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 클래스</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span> <span class=\"token comment\">// 메소드</span>\n        <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello, World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"주석\" style=\"position:relative;\"><a href=\"#%EC%A3%BC%EC%84%9D\" aria-label=\"주석 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>주석</h1>\n<ol>\n<li>\n<p>블록(block) 단위의 주석 : /* ~ */</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/*\n파일 이름 : \n작 성 자 : \n작 성 일 :\n*/</span></code></pre></div>\n</li>\n<li>\n<p>행(line) 단위 주석 : //</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 파일 이름 : </span>\n<span class=\"token comment\">// 작 성 자 : </span>\n<span class=\"token comment\">// 작 성 일 : </span></code></pre></div>\n</li>\n</ol>\n<h1 id=\"변수와-자료형\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%99%80-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"변수와 자료형 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수와 자료형</h1>\n<h2 id=\"변수의-이해와-활용\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9\" aria-label=\"변수의 이해와 활용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>변수의 이해와 활용</h2>\n<h3 id=\"변수\" style=\"position:relative;\"><a href=\"#%EB%B3%80%EC%88%98\" aria-label=\"변수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a><strong>변수</strong></h3>\n<p>데이터의 저장과 참조를 위해 <strong>'할당된 메모리 공간'에 붙여진 이름</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num<span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// int : 용도</span>\n<span class=\"token comment\">// num : 이름</span></code></pre></div>\n<p><strong>초기화</strong></p>\n<p>변수에 처음 값을 지정하는 일을 가리켜 <strong>초기화</strong>라 함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"자료형의-종류와-구분\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%98-%EC%A2%85%EB%A5%98%EC%99%80-%EA%B5%AC%EB%B6%84\" aria-label=\"자료형의 종류와 구분 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자료형의 종류와 구분</h3>\n<ul>\n<li>\n<p>자바에서 기본적으로 제공하는 자료형을 <strong>기본 자료형(Primitive Data Type)</strong>이라 함</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6c01cc6a-e01a-4918-a93e-85b9395be1a1/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/6c01cc6a-e01a-4918-a93e-85b9395be1a1/Untitled.png\"></p>\n</li>\n</ul>\n<h2 id=\"자바의-기본-자료형\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95\" aria-label=\"자바의 기본 자료형 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바의 기본 자료형</h2>\n<h3 id=\"정수-자료형--byte-short-int-long\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95--byte-short-int-long\" aria-label=\"정수 자료형  byte short int long permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수 자료형 : byte, short, int, long</h3>\n<p>네 개의 정수 자료형이 갖는 차이점은 정수의 표현에 사용하는 <strong>메모리 공간의 크기</strong>에 있음 </p>\n<p>(short를 사용하면 2바이트 크기의 변수가 만들어지고, int로 선언하면 4바이트 크기의 변수가 만들어짐)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">OperatePromotion</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">short</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">11</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">short</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">22</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">short</span> result <span class=\"token operator\">=</span> num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token comment\">// !!! error !!! incompatible types : possible lossy conversion from int to short</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>자바 가상머신은 <strong>정수형 연산</strong>을 4바이트 <strong>int형으로 진행</strong>하기 때문에 byte형 변수나 short형 변수에 저장된 값을 대상으로 연산을 진행하면 이를 먼저 <strong>int형 값으로 변경</strong>해버림</p>\n<ul>\n<li>long(8바이트) → int(4바이트) 형변환은 데이터 손실이 발생하므로 이뤄지지 않음</li>\n</ul>\n<p>위 코드에서 컴파일 에러가 난 이유는 값을 더할 때가 아닌 더한 값인 int형 값을 short형 변수에 담는 과정에서 에러가 발생하였다</p>\n<p>⇒ 연산을 동반하는 상황에서는 변수를 byte, short로 선언해도 생각만큼 메모리가 절약되지 않고, 오히려 형변환 과정만 추가될 뿐이므로 int형으로 선언한다</p>\n<h3 id=\"실수-자료형--float-double\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95--float-double\" aria-label=\"실수 자료형  float double permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수 자료형 : float, double</h3>\n<h3 id=\"문자-자료형--char\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90-%EC%9E%90%EB%A3%8C%ED%98%95--char\" aria-label=\"문자 자료형  char permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자 자료형 : char</h3>\n<p>하드웨어는 수를 인식하고 표현하는 장치임. 따라서 문자의 표현은 하드웨어 위에서 동작하는 소프트웨어의 몫이다</p>\n<p>하드웨어는 수밖에 인식을 못하니 문자 하나하나에 <strong>숫자를 부여</strong>하는 방법 밖에 없음</p>\n<p>문자 A는 숫자 65로 표시하기로 약속한다</p>\n<p>이러한 <strong>문자의 표현에 대한 약속</strong>을 <strong>문자 셋(Character Set)</strong>이라 함</p>\n<p>문자 셋의 설계는 지역 및 국가별로 각각 이루어져 그 수가 다양하므로  데이터를 주고받거나 여러 국가의 언어를 동시에 표현하는 상황에서 문제가 발생됨</p>\n<p>⇒ 모든 나라의 문자를 수용하여 <strong>전 세계적으로 사용할 수 있는 문자 셋</strong>을 설계하게 되고 이를 <strong>유니코드(Unicode)</strong> 라고 함</p>\n<p>유니코드는 문자 하나를 2바이트로 표현하는 문자 체계로 2바이트로 표현할 수 있는 데이터 수는 2의 16승 이므로 6만개 이상을 표현 할 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">char</span> ch1 <span class=\"token operator\">=</span> <span class=\"token string\">'헐'</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 유니코드 값 : 54735</span>\n<span class=\"token comment\">// 유니코드 값을 16진수로 표현하면 : 0xD5D0</span>\n\n<span class=\"token keyword\">char</span> ch2 <span class=\"token operator\">=</span> <span class=\"token string\">'확'</span><span class=\"token punctuation\">;</span> \n<span class=\"token comment\">// 유니코드 값 : 54869</span>\n<span class=\"token comment\">// 유니코드 값을 16진수로 표현하면 : 0xD655</span></code></pre></div>\n<ul>\n<li><strong>컴파일</strong> 과정에서 위의 문자들은 <strong>유니코드 값으로 치환</strong>되며, <strong>실제 저장되는 값은 유니코드 값</strong>이다.</li>\n</ul>\n<h3 id=\"논리-자료형--boolean\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%9E%90%EB%A3%8C%ED%98%95--boolean\" aria-label=\"논리 자료형  boolean permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 자료형 : boolean</h3>\n<ul>\n<li>true : 참을 의미</li>\n<li>false : 거짓을 의미</li>\n</ul>\n<hr>\n<h1 id=\"03-상수와-형-변환\" style=\"position:relative;\"><a href=\"#03-%EC%83%81%EC%88%98%EC%99%80-%ED%98%95-%EB%B3%80%ED%99%98\" aria-label=\"03 상수와 형 변환 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>03. 상수와 형 변환</h1>\n<h2 id=\"상수constants\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98constants\" aria-label=\"상수constants permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수(Constants)</h2>\n<p>값이 변하지 않는 수를 의미하며, 자바에서는 <strong>한 번 그 값이 정해지면 이후로 변경 불가능한 변수</strong>도 상수라 함</p>\n<h3 id=\"자바의-일반적인-상수\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%9D%98-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%83%81%EC%88%98\" aria-label=\"자바의 일반적인 상수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바의 일반적인 상수</h3>\n<p>변수를 선언할때 그 앞에 <strong>final 키워드를 선언</strong>하면 상수가 되며 아래 특징을 가짐</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">final</span> <span class=\"token keyword\">int</span> MAX_SIZE <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>값을 <strong>딱 한 번만 할당</strong> 할 수 있다</li>\n<li>한 번 할당된 값은 <strong>변경이 불가능</strong>하다</li>\n</ul>\n<h3 id=\"상수의-변수명-관례\" style=\"position:relative;\"><a href=\"#%EC%83%81%EC%88%98%EC%9D%98-%EB%B3%80%EC%88%98%EB%AA%85-%EA%B4%80%EB%A1%80\" aria-label=\"상수의 변수명 관례 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>상수의 변수명 관례</h3>\n<ul>\n<li>상수의 이름은 모두 <strong>대문자</strong>로 짓는다</li>\n<li>이름이 둘 이상의 단어로 이뤄질 경우 단어 사이에 <strong>언더바</strong>를 넣는다</li>\n</ul>\n<h3 id=\"리터럴literals에-대한-이해\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%ED%84%B0%EB%9F%B4literals%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4\" aria-label=\"리터럴literals에 대한 이해 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리터럴(Literals)에 대한 이해</h3>\n<p>대입 연산자의 오른편에 위치한 숫자 157을 가리켜 '리터럴' 또는 '리터럴 상수' 라고 함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">157</span> <span class=\"token comment\">// 숫자 157은 리터럴 상수</span></code></pre></div>\n<h3 id=\"정수형-상수의-표현-방법\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%88%98%ED%98%95-%EC%83%81%EC%88%98%EC%9D%98-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95\" aria-label=\"정수형 상수의 표현 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정수형 상수의 표현 방법</h3>\n<ul>\n<li>\n<p>10진수로 int형 정수 표현</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">11</span> <span class=\"token operator\">+</span> <span class=\"token number\">22</span> <span class=\"token operator\">+</span> <span class=\"token number\">33</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>8진수로 int형 정수 표현 : 숫자 앞에 0 삽입</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">011</span> <span class=\"token operator\">+</span> <span class=\"token number\">022</span> <span class=\"token operator\">+</span> <span class=\"token number\">033</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>16진수로 int형 정수 표현 : 숫자 앞에 0x 또는 0X 삽입</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0x11</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x22</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x33</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<p>⇒ 자바는 byte나 short로 정수를 표현하는 방법을 제공하지 않음. 따라서 다음과 같은 덧셈을 byte나 short로 할 방법이 없으며</p>\n<p>초기화 시에는 아래와 같은 초기화를 허용해줌</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">byte</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">short</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">25</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>반면 long형 정수를 써야할 때는 컴파일러가 알아서 이를 long형으로 인식해주지 않음</p>\n<p> long형 정수의 표현 방법을 별도로 제공해줌</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">long</span> num <span class=\"token operator\">=</span> <span class=\"token number\">31223156L</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>숫자 끝에 <strong>L혹은 l을 붙여</strong> 준다</li>\n</ul>\n<h3 id=\"실수형-상수\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%88%98%ED%98%95-%EC%83%81%EC%88%98\" aria-label=\"실수형 상수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실수형 상수</h3>\n<p>실수형 상수는 <strong>double형으로 인식</strong>됨</p>\n<p>float형 실수를 표현하고 싶을 때는 <strong>f또는 F를 붇이면 됨</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">float</span> num <span class=\"token operator\">=</span> <span class=\"token number\">3.0004888f</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"부울형-상수와-문자형-상수\" style=\"position:relative;\"><a href=\"#%EB%B6%80%EC%9A%B8%ED%98%95-%EC%83%81%EC%88%98%EC%99%80-%EB%AC%B8%EC%9E%90%ED%98%95-%EC%83%81%EC%88%98\" aria-label=\"부울형 상수와 문자형 상수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부울형 상수와 문자형 상수</h3>\n<ul>\n<li>부울형 상수 : true, false</li>\n<li>문자형 상수 : '한', '글', 'A', 'Z'</li>\n</ul>\n<p><strong>이스케이프 시퀀스(escape sequences)</strong></p>\n<p>유니코드 중 키보드로 입력하기 어려운 문자를 표현하기 위한 것</p>\n<ul>\n<li>\\b : 백스페이스</li>\n<li>\\t : 탭문자</li>\n<li>\\ : 백슬래시</li>\n<li>' : 작은 따옴표</li>\n<li>\" : 큰 따옴표</li>\n<li>\\n : 개 행</li>\n<li>\\r : 캐리지 리턴(carriage return)</li>\n</ul>\n<h2 id=\"형-변환\" style=\"position:relative;\"><a href=\"#%ED%98%95-%EB%B3%80%ED%99%98\" aria-label=\"형 변환 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>형 변환</h2>\n<p>서로 다른 자료형의 데이터를 연산 할 수 없으므로 자료형을 하나로 일치시켜줘야 함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">long</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">3147483547L</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이 경우는 int형 변수에 담긴 값을 long형으로 변환해야 데이터 손실 없이 연산이 가능함</p>\n<ol>\n<li>변수 num1에 저장된 값을 long형으로 변환하여 메모리에 임시 저장한다 (자동 형 변환)</li>\n<li>이 변환된 값을 num2에 저장된 값을 대상으로 덧셈을 진행한다</li>\n</ol>\n<p>⇒ 이러한 일련의 과정을 '자료형 변환' 혹은 '형 변환' 이라고 함</p>\n<h3 id=\"자동-형-변환implicit-conversion\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%8F%99-%ED%98%95-%EB%B3%80%ED%99%98implicit-conversion\" aria-label=\"자동 형 변환implicit conversion permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자동 형 변환(Implicit Conversion)</h3>\n<p>자동 형 변환이 일어나는 규칙</p>\n<ol>\n<li>자료형의 <strong>크기가 큰 방향으로 형 변환</strong>이 일어남</li>\n<li>자료형의 크기에 상관없이 <strong>정수 자료형보다 실수 자료형이 우선</strong>함</li>\n<li>\n<p>자동 형 변환이 일어나는 방향</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">       -&gt; [short]\n[byte]            -&gt; [int] -&gt; [long] -&gt; [float] -&gt; [double]\n       -&gt; [char] </code></pre></div>\n</li>\n</ol>\n<h3 id=\"명시적-형-변환explicit-conversion\" style=\"position:relative;\"><a href=\"#%EB%AA%85%EC%8B%9C%EC%A0%81-%ED%98%95-%EB%B3%80%ED%99%98explicit-conversion\" aria-label=\"명시적 형 변환explicit conversion permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>명시적 형 변환(Explicit Conversion)</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">short</span> num1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">short</span> num2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">short</span> num3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>num1 <span class=\"token operator\">+</span> num2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<hr>\n<h1 id=\"연산자operators\" style=\"position:relative;\"><a href=\"#%EC%97%B0%EC%82%B0%EC%9E%90operators\" aria-label=\"연산자operators permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>연산자(Operators)</h1>\n<h2 id=\"자바에서-제공하는-이항-연산자들\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%9D%B4%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\" aria-label=\"자바에서 제공하는 이항 연산자들 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바에서 제공하는 이항 연산자들</h2>\n<p>피연산자가 둘인 연산자를 가리켜 이항 연산자(binary operator) 라고 함</p>\n<ul>\n<li>\n<p>자바의 연산자들</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3c5258ec-396c-4a13-8dbf-b146c42d233d/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3c5258ec-396c-4a13-8dbf-b146c42d233d/Untitled.png\"></p>\n</li>\n</ul>\n<h3 id=\"대입-연산자와-산술-연산자-------\" style=\"position:relative;\"><a href=\"#%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90-------\" aria-label=\"대입 연산자와 산술 연산자        permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>대입 연산자와 산술 연산자 : =, +, , *, /, %</h3>\n<ul>\n<li>\n<p>대입 연산자와 산술 연산자</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3a96f4dc-ab2d-4f5c-a999-c8054d412c6b/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3a96f4dc-ab2d-4f5c-a999-c8054d412c6b/Untitled.png\"></p>\n</li>\n</ul>\n<h3 id=\"복합compound-대입-연산자\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%ED%95%A9compound-%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"복합compound 대입 연산자 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복합(Compound) 대입 연산자</h3>\n<p>대입 연산자가 다른 연산자와 묶여서 정의된 형태의 연산자</p>\n<ul>\n<li>\n<p>복합 대입 연산자</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/23dc1379-f4a7-4bd1-b4d1-dba335ad4552/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/23dc1379-f4a7-4bd1-b4d1-dba335ad4552/Untitled.png\"></p>\n</li>\n<li>\n<p>복합 대입 연산자를 사용하면 컴파일러가 형 변환을 알아서 해준다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">CompAssignOp</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Stirng</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">short</span> num <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span>\n\t\tnum <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">short</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">+</span> <span class=\"token number\">77L</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 형 변환 안하면 컴파일 오류 발생</span>\n\t\tnum <span class=\"token operator\">+=</span> <span class=\"token number\">77L</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 형 변환이 필요하지 않음</span>\n\n\t\t<span class=\"token keyword\">int</span> rate <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\t\trate <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>rate <span class=\"token operator\">*</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 형 변환 안하면 컴파일 오류 발생</span>\n\t\trate <span class=\"token operator\">*=</span> <span class=\"token number\">3.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 형 변환이 필요하지 않음</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"관계-연산자----≤-≥--≠\" style=\"position:relative;\"><a href=\"#%EA%B4%80%EA%B3%84-%EC%97%B0%EC%82%B0%EC%9E%90----%E2%89%A4-%E2%89%A5--%E2%89%A0\" aria-label=\"관계 연산자    ≤ ≥  ≠ permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>관계 연산자 : &#x3C;, >, ≤, ≥, ==, ≠</h3>\n<ul>\n<li>\n<p>관계 연산자</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9f27dfea-7ed5-4859-8075-ab74765cf5db/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/9f27dfea-7ed5-4859-8075-ab74765cf5db/Untitled.png\"></p>\n</li>\n</ul>\n<h3 id=\"논리-연산자----\" style=\"position:relative;\"><a href=\"#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90----\" aria-label=\"논리 연산자     permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>논리 연산자 : &#x26;&#x26;, ||, !</h3>\n<ul>\n<li>\n<p>논리 연산자</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a211ccd4-8339-452d-9d3a-05ccac8a8e0f/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a211ccd4-8339-452d-9d3a-05ccac8a8e0f/Untitled.png\"></p>\n</li>\n</ul>\n<h2 id=\"자바에서-제공하는-단항-연산자들\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EB%8B%A8%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\" aria-label=\"자바에서 제공하는 단항 연산자들 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바에서 제공하는 단항 연산자들</h2>\n<h3 id=\"부호-연산자\" style=\"position:relative;\"><a href=\"#%EB%B6%80%ED%98%B8-%EC%97%B0%EC%82%B0%EC%9E%90\" aria-label=\"부호 연산자 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>부호 연산자</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">short</span> num <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">+</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// -5</span></code></pre></div>\n<h3 id=\"증가-및-감소-연산자---\" style=\"position:relative;\"><a href=\"#%EC%A6%9D%EA%B0%80-%EB%B0%8F-%EA%B0%90%EC%86%8C-%EC%97%B0%EC%82%B0%EC%9E%90---\" aria-label=\"증가 및 감소 연산자    permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>증가 및 감소 연산자 : ++, —</h3>\n<ul>\n<li>\n<p>증가 연산자(++)</p>\n<p>피연산자의 값을 1 증가시킴</p>\n</li>\n<li>\n<p>감소 연산자(—)</p>\n<p>피연산자의 값을 1 감소 시킴</p>\n</li>\n<li>\n<p>전위형 : Prefix ++, Prefix —</p>\n<ul>\n<li>\n<p>j = ++i 형태</p>\n<p>값이 참조 되기 전에 증가(혹은 감소) 시킨다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">++</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token operator\">--</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7</span></code></pre></div>\n</li>\n</ul>\n</li>\n<li>\n<p>후위형 : Postfix ++, Postfix —</p>\n<ul>\n<li>\n<p>j = i++ 형태</p>\n<p>값이 참조 된 후에 증가(혹은 감소) 시킨다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 7</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 8</span></code></pre></div>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"비트를-대상으로-하는-연산자들\" style=\"position:relative;\"><a href=\"#%EB%B9%84%ED%8A%B8%EB%A5%BC-%EB%8C%80%EC%83%81%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\" aria-label=\"비트를 대상으로 하는 연산자들 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비트를 대상으로 하는 연산자들</h2>\n<h3 id=\"비트-연산자의-이해\" style=\"position:relative;\"><a href=\"#%EB%B9%84%ED%8A%B8-%EC%97%B0%EC%82%B0%EC%9E%90%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-label=\"비트 연산자의 이해 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>비트 연산자의 이해</h3>\n<p>비트 연산자는 각각의 비트를 대상으로 연산을 진행하는 연산자이며 피연산자는 반드시 정수여야 함</p>\n<ul>\n<li>\n<p>비트 연산자</p>\n<p><img src=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4737a56e-fe55-4271-a59a-f12b3e7d4e18/Untitled.png\" alt=\"https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4737a56e-fe55-4271-a59a-f12b3e7d4e18/Untitled.png\"></p>\n</li>\n<li>\n<p>예제</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">byte</span> n1 <span class=\"token operator\">=</span> <span class=\"token number\">13</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> n2 <span class=\"token operator\">=</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> n3 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">byte</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>n1 <span class=\"token operator\">&amp;</span> n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  <span class=\"token comment\">// 비트 연산 &amp;의 결과는 int형</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 5</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    +-------------------------------+\nn1  | 0 | 0 | 0 | 0 | 1 | 1 | 0 | 1 |\n    +-------------------------------+\n    +-------------------------------+\nn2  | 0 | 0 | 0 | 0 | 0 | 1 | 1 | 1 |\n    +-------------------------------+\n\t\t\t\t   ↓ 각 비트별로 &amp; 연산 ↓\n    +-------------------------------+\nn3  | 0 | 0 | 0 | 0 | 0 | 1 | 0 | 1 |\n    +-------------------------------+\n\t\t\t\t     &amp; 연산의 결과는 5</code></pre></div>\n</li>\n</ul>\n<p><strong>비트 연산자의 특성</strong></p>\n<ul>\n<li>비트 연산자는 각각의 비트를 대상으로 연산을 진행한다</li>\n<li>그리고 각 비트를 대상으로 진행된 연산 결과를 묶어서 하나의 연산 결과를 반환한다</li>\n</ul>\n<h1 id=\"07-클래스와-인스턴스\" style=\"position:relative;\"><a href=\"#07-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\" aria-label=\"07 클래스와 인스턴스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>07. 클래스와 인스턴스</h1>\n<h2 id=\"클래스의-정의와-인스턴스-생성\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A0%95%EC%9D%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\" aria-label=\"클래스의 정의와 인스턴스 생성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 정의와 인스턴스 생성</h2>\n<h3 id=\"클래스class--데이터data--메소드method\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4class--%EB%8D%B0%EC%9D%B4%ED%84%B0data--%EB%A9%94%EC%86%8C%EB%93%9Cmethod\" aria-label=\"클래스class  데이터data  메소드method permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스(Class) = 데이터(Data) + 메소드(Method)</h3>\n<ul>\n<li>\n<p><strong>데이터</strong> : <strong>프로그램 상에서 유지하고 관리</strong>해야 할 데이터</p>\n<ul>\n<li>데이터는 <strong>'변수의 선언'</strong>을 통해 유지 및 관리가 되고 <strong>변수에 저장된 데이터는 '메소드의 호출'을 통해 처리</strong> 됨</li>\n</ul>\n</li>\n<li><strong>기능</strong> : <strong>데이터를 처리하고 조작</strong>하는 기능</li>\n</ul>\n<h3 id=\"클래스의-구성\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EA%B5%AC%EC%84%B1\" aria-label=\"클래스의 구성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 구성</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccount</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 인스턴스 변수</span>\n\t<span class=\"token keyword\">int</span> blance <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// 인스턴스 메소드</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">deposit</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">withdraw</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> amount<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">int</span> <span class=\"token function\">checkMyBalance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>\n<p><strong>인스턴스 변수</strong> : 클래스 내에 선언된 변수</p>\n<ul>\n<li>같은 클래스 내에 위치한 메소드 내에서 접근이 가능</li>\n<li><strong>멤버 변수, 필드(Fields)</strong> 라고 불리기도 함</li>\n</ul>\n</li>\n<li><strong>인스턴스 메소드</strong> : 클래스 내에 정의된 메소드</li>\n</ul>\n<h3 id=\"인스턴스-객체\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EA%B0%9D%EC%B2%B4\" aria-label=\"인스턴스 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 (=객체)</h3>\n<p>클래스는 붕어빵과 같이 <strong>무언가를 찍어내는 틀(Mold)</strong>에 비유할 수 있으며, 클래스가 정의되어 있다고 그 안에 위치한 변수나 메소드를 사용 할 수 있는것은 아님</p>\n<p>틀을 이용해 <strong>인스턴스</strong>라는 것을 찍어 내야 사용이 가능함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 BankAccount의 인스턴스화(Instantiation)</span></code></pre></div>\n<p>인스턴스가 만들어지면 <strong>실제 메모리 공간에 존재</strong>하게 됨</p>\n<p>이를 사용하기 위해서는 만들어진 <strong>인스턴스를 참조할 수 있는(가리키고 있을 수 있는) 참조변수</strong>가 필요함</p>\n<p>new로 인스턴스를 생성하면 생성된 <strong>인스턴스의 주소 값이 반환</strong>되고 <strong>참조 변수에는 그 주소 값이 저장</strong>되는 형태이다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">BankAccount</span> myAcnt1<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 참조변수 myAcnt1 선언</span>\n<span class=\"token class-name\">BankAccount</span> myAcnt2<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 참조변수 myAcnt2 선언</span>\n\n<span class=\"token comment\">// 참조변수 myAcnt1이 새로 생성되는 인스턴스를 가리킴</span>\nmyAcnt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 참조변수 myAcnt2이 새로 생성되는 인스턴스를 가리킴</span>\nmyAcnt2 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"참조변수reference-variable의-특성\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EB%B3%80%EC%88%98reference-variable%EC%9D%98-%ED%8A%B9%EC%84%B1\" aria-label=\"참조변수reference variable의 특성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조변수(Reference Variable)의 특성</h3>\n<ul>\n<li>\n<p>참조변수도 변수이므로 <strong>참조하는 인스턴스를 바꿀 수 있음</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">BankAccount</span> yoon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\nyoon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// yoon이 새 인스턴스를 참조함</span>\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code></pre></div>\n</li>\n<li>메소드의 <strong>매개변수로 참조변수를 선언 할 수 있음</strong></li>\n<li>참조변수에 <strong>null을 대입하여 인스턴스와의 관계를 끊을 수 있음</strong></li>\n</ul>\n<h2 id=\"생성자constructor와-string-클래스의-소개\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90constructor%EC%99%80-string-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%86%8C%EA%B0%9C\" aria-label=\"생성자constructor와 string 클래스의 소개 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자(Constructor)와 String 클래스의 소개</h2>\n<h3 id=\"string-클래스\" style=\"position:relative;\"><a href=\"#string-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"string 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 클래스</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">FirstStringIntro</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// 문자열 선언과 동시에 참조변수로 참조함</span>\n\t\t<span class=\"token class-name\">String</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Happy\"</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">String</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Birthday\"</span><span class=\"token punctuation\">;</span>\n\t\t\n\t\t<span class=\"token function\">printString</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">+</span> str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">printString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Hello World\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">printString</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>문자열을 메소드의 인자로 전달 할 수 있다</li>\n<li>매개변수로 String형 참조변수를 선언하여 문자열을 인자로 전달받을 수 있다</li>\n</ul>\n<h3 id=\"생성자constructor\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90constructor\" aria-label=\"생성자constructor permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자(Constructor)</h3>\n<p><strong>인스턴스 생성과 동시에 멤버 변수의 초기화</strong>를 하기 위한 메소드로 <strong>개발자의 편의를 위해 문법으로 만들어둠</strong></p>\n<p>생성자도 메소드의 모습과 같지만 차이점이 존재함</p>\n<ul>\n<li>생성자의 이름은 <strong>클래스의 이름과 동일해야 함</strong></li>\n<li>생성자는 <strong>값을 반환하지 않고 반환형도 표시하지 않음</strong></li>\n</ul>\n<p>⇒ 위 조건을 만족하면 <strong>자바 컴파일러</strong>에 의해 <strong>생성자로 인식</strong>됨 </p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccount</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token class-name\">String</span> accNumber<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">String</span> ssNumber<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">int</span> blance<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token comment\">// 생성자</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> acc<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> ss<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> bal<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>accNumber <span class=\"token operator\">=</span> acc<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>ssNumber <span class=\"token operator\">=</span> ss<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>blance <span class=\"token operator\">=</span> bal<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccountConstructor</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">Stirng</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">BankAccount</span> yoon <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12-34-56\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"990990-9909990\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>생성자를 통해 값을 초기화 시키면 <strong>인스턴스 생성 마지막 단계에서 생성자가 호출</strong>이 됨 (<strong>인스턴스가 메모리에 할당된 후</strong>에 호출)</p>\n<ul>\n<li><strong>인스턴스 생성의 마지막 단계는 생성자 호출</strong>이다</li>\n<li>어떠한 이유로든 <strong>생성자 호출이 생략된 인스턴스는 인스턴스가 아니다</strong></li>\n</ul>\n<h3 id=\"디폴트-생성자default-constructor\" style=\"position:relative;\"><a href=\"#%EB%94%94%ED%8F%B4%ED%8A%B8-%EC%83%9D%EC%84%B1%EC%9E%90default-constructor\" aria-label=\"디폴트 생성자default constructor permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>디폴트 생성자(Default Constructor)</h3>\n<p><strong>생성자를 생략한 상태의 클래스를 정의</strong>하면 자바 컴파일러가 <strong>'디폴트 생성자'</strong> 라는 것을 클래스의 정의에 넣어줌</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">BankAccount</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n\t<span class=\"token comment\">// 컴파일러에 의해 자동 삽입되는 디폴트 생성자</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">BankAccount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token comment\">// empty</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"자바의-이름-규칙naming-rule\" style=\"position:relative;\"><a href=\"#%EC%9E%90%EB%B0%94%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99naming-rule\" aria-label=\"자바의 이름 규칙naming rule permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>자바의 이름 규칙(Naming Rule)</h2>\n<h3 id=\"클래스의-이름-규칙\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99\" aria-label=\"클래스의 이름 규칙 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 이름 규칙</h3>\n<p>Camel Case 모델 규칙을 사용함</p>\n<ul>\n<li>클래스 이름의 <strong>첫 문자는 대문자</strong>로 시작한다</li>\n<li>둘 이상의 단어가 묶여서 하나의 이름을 이룰 때, <strong>새로 시작하는 단어는 대문자</strong>로 한다</li>\n</ul>\n<h3 id=\"메소드와-변수의-이름-규칙\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C%EC%99%80-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99\" aria-label=\"메소드와 변수의 이름 규칙 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드와 변수의 이름 규칙</h3>\n<p>변형된 Camel Case로 클래스와 구분 짓기 위해 첫번째 문자는 소문자로 시작함</p>\n<hr>\n<h1 id=\"08-패키지와-클래스-패스\" style=\"position:relative;\"><a href=\"#08-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%A8%EC%8A%A4\" aria-label=\"08 패키지와 클래스 패스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>08. 패키지와 클래스 패스</h1>\n<h2 id=\"클래스-패스class-path\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%A8%EC%8A%A4class-path\" aria-label=\"클래스 패스class path permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 패스(Class Path)</h2>\n<p>자바 가상머신이 <strong>클래스 파일을 찾는 경로</strong></p>\n<h2 id=\"패키지package의-이해\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80package%EC%9D%98-%EC%9D%B4%ED%95%B4\" aria-label=\"패키지package의 이해 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지(Package)의 이해</h2>\n<p>패키지는 <strong>클래스를 묶는 수단</strong>으로 <strong>'다른 클래스' 또는 '다른 클래스들의 묶음'과 구분</strong>하기 위한 수단임</p>\n<h3 id=\"패키지-이름-관례\" style=\"position:relative;\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9D%B4%EB%A6%84-%EA%B4%80%EB%A1%80\" aria-label=\"패키지 이름 관례 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 이름 관례</h3>\n<ul>\n<li>클래스의 이름과 구빈이 되도록 패키지의 이름은 모두 <strong>소문자</strong>로 구성</li>\n<li>인터넷 <strong>도메인 이름의 역순으로 패키지 이름 구성</strong></li>\n<li>패키지 이름 끝에 클래스를 정의한 주체 또는 팀을 구분하는 이름을 추가함</li>\n</ul>\n<hr>\n<h1 id=\"09-정보-은닉-그리고-캡슐화\" style=\"position:relative;\"><a href=\"#09-%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94\" aria-label=\"09 정보 은닉 그리고 캡슐화 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>09. 정보 은닉 그리고 캡슐화</h1>\n<h2 id=\"정보-은닉information-hiding\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89information-hiding\" aria-label=\"정보 은닉information hiding permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보 은닉(Information Hiding)</h2>\n<p>자바에서 말하는 정보는 클래스의 <strong>'인스턴스 변수'</strong>를 의미함</p>\n<p>즉, 정보를 은닉한다는 것은 <strong>인스턴스 변수를 숨긴다는 것</strong>임</p>\n<h3 id=\"정보-은닉을-해야하는-이유\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\" aria-label=\"정보 은닉을 해야하는 이유 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보 은닉을 해야하는 이유</h3>\n<p>인스턴스 변수에 바로 접근하여 값을 변경 할 경우 컴파일 에러는 발생하지 않지만 <strong>안정성 체크가 되지 않음</strong> (중대한 실수가 발생 할 수 있음)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Circle</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">double</span> red <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 원의 반지름</span>\n\t<span class=\"token keyword\">final</span> <span class=\"token keyword\">double</span> PI <span class=\"token operator\">=</span> <span class=\"token number\">3.14</span><span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token keyword\">public</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">setRad</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 아래 정의된 setRad 메소르를 호출해 초기화</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">setRad</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">double</span> r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">&lt;</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 반지름은 0보다 작을 수 없으므로</span>\n\t\t\trad <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t\t\t<span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\trad <span class=\"token operator\">=</span> r<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">double</span> <span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>rad <span class=\"token operator\">*</span> rad<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> PI<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 원의 넓이 반환</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">UnsafeCircle</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">Circle</span> c <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Circle</span><span class=\"token punctuation\">(</span><span class=\"token number\">1.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 생성자를 통해 값 전달</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">setRad</span><span class=\"token punctuation\">(</span><span class=\"token number\">2.5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tc<span class=\"token punctuation\">.</span><span class=\"token function\">setRad</span><span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">3.3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n\t\tc<span class=\"token punctuation\">.</span>rad <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">4.5</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 논리적 오류가 발생됨에도 컴파일 오류가 발생 안됨 (= 안정성 체크가 안됨)</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">.</span><span class=\"token function\">getArea</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 코드와 같은 접근이 허용되지 않도록 클래스를 설계할 필요가 있으며 이러한 클래스 설계를 '정보 은닉'이라 함</p>\n<ul>\n<li>메소드를 통한 값 전달의 이점 : <strong>안정성이 높아진다. 잘못된 값이 할당될 때 예외 처리가 가능</strong>함</li>\n</ul>\n<h3 id=\"정보의-은닉을-위한-private-선언\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EB%B3%B4%EC%9D%98-%EC%9D%80%EB%8B%89%EC%9D%84-%EC%9C%84%ED%95%9C-private-%EC%84%A0%EC%96%B8\" aria-label=\"정보의 은닉을 위한 private 선언 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정보의 은닉을 위한 private 선언</h3>\n<p>인스턴스 변수는 <strong>클래스 내부에서만 접근을 허용</strong>시켜주어 <strong>논리적 오류를 문법적으로 컴파일 오류로 이어지도록 강제화</strong> 시켜줌</p>\n<p>private로 선언된 인스턴스 변수에 접근하기 위해서는 두개의 메소드가 필요함</p>\n<h3 id=\"게터getter\" style=\"position:relative;\"><a href=\"#%EA%B2%8C%ED%84%B0getter\" aria-label=\"게터getter permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>게터(Getter)</h3>\n<ul>\n<li><strong>인스턴스 변수의 값을 참조하는 용도로 정의된 메소드</strong></li>\n<li>변수의 이름이 name일 때, 메소드의 이름은 getName으로 짓는 것이 관례</li>\n</ul>\n<h3 id=\"세터setter\" style=\"position:relative;\"><a href=\"#%EC%84%B8%ED%84%B0setter\" aria-label=\"세터setter permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>세터(Setter)</h3>\n<ul>\n<li><strong>인스턴스 변수의 값을 설정하는 용도로 정의된 메소드</strong></li>\n<li>변수의 이름이 name일 때, 메소드의 이름은 setName으로 짓는 것이 관례</li>\n</ul>\n<h2 id=\"접근-수준-지시자access-level-modifiers\" style=\"position:relative;\"><a href=\"#%EC%A0%91%EA%B7%BC-%EC%88%98%EC%A4%80-%EC%A7%80%EC%8B%9C%EC%9E%90access-level-modifiers\" aria-label=\"접근 수준 지시자access level modifiers permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>접근 수준 지시자(Access-level Modifiers)</h2>\n<p><strong>접근의 허용 수준을 결정 할 때 사용하는 키워드</strong></p>\n<h3 id=\"클래스의-정의-대상\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A0%95%EC%9D%98-%EB%8C%80%EC%83%81\" aria-label=\"클래스의 정의 대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스의 정의 대상</h3>\n<p>public, default 를 접근 제어자로 선언 할 수 있음</p>\n<ul>\n<li><strong>public</strong> : <strong>어디서든</strong> 인스턴스 생성이 가능하다</li>\n<li><strong>default</strong> : <strong>동일 패키지로 묶인 클래스 내에서만</strong> 인스턴스 생성을 허용한다</li>\n</ul>\n<p><strong>지켜야 할 사항</strong></p>\n<ul>\n<li>하나의 소스 파일에 <strong>하나의 클래스만 public으로 선언</strong>한다</li>\n<li><strong>소스 파일의 이름과 public으로 선언된 클래스의 이름을 일치</strong>시킨다</li>\n</ul>\n<h3 id=\"인스턴스-멤버-대상\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%A9%A4%EB%B2%84-%EB%8C%80%EC%83%81\" aria-label=\"인스턴스 멤버 대상 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 멤버 대상</h3>\n<p>public, protected, private, default 를 접근 제어자로 선언 할 수 있음</p>\n<ul>\n<li><strong>private</strong> : <strong>동일한 클래스에 정의된 메소드</strong>에서만 접근 가능</li>\n<li><strong>default</strong> : <strong>동일 패키지로 묶인 클래스</strong> 내에서만 접근 가능</li>\n<li><strong>protected</strong> : 동일한 패키지가 아니어도 <strong>상속 받은 클래스</strong>인 경우 접근 가능</li>\n<li><strong>public</strong> : <strong>어디서든</strong> 접근이 가능하다</li>\n</ul>\n<p>⇒ 접근 허용 범위 : public > protected > default > private</p>\n<h2 id=\"캡슐화encapsulation\" style=\"position:relative;\"><a href=\"#%EC%BA%A1%EC%8A%90%ED%99%94encapsulation\" aria-label=\"캡슐화encapsulation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>캡슐화(Encapsulation)</h2>\n<p>하나의 목적을 이루기 위해 관련 있는 모든 것을 하나의 클래스에 담아두는 것으로 객체지향 기반의 클래스 설계에 있어서 가장 중요함</p>\n<ul>\n<li>\n<p>캡슐화는 절대로 클래스를 크게 만들라는 뜻이 아님.</p>\n<p>해당 클래스와 관련 있는 내용을 하나의 클래스에 모두 담되 부족하게 담아서도 넘치게 담아서도 안됨</p>\n<h1 id=\"10-클래스-변수와-클래스-메소드\" style=\"position:relative;\"><a href=\"#10-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"10 클래스 변수와 클래스 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>10. 클래스 변수와 클래스 메소드</h1>\n</li>\n</ul>\n<h2 id=\"static-선언을-붙여서-선언하는-클래스-변수\" style=\"position:relative;\"><a href=\"#static-%EC%84%A0%EC%96%B8%EC%9D%84-%EB%B6%99%EC%97%AC%EC%84%9C-%EC%84%A0%EC%96%B8%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98\" aria-label=\"static 선언을 붙여서 선언하는 클래스 변수 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>static 선언을 붙여서 선언하는 클래스 변수</h2>\n<p>클래스 내에 선언된 변수 앞에 static 선언을 붙이면 인스턴스 변수가 아닌 <strong>클래스 변수</strong>가 된다</p>\n<p>static으로 선언된 변수(클래스 변수)는 선언된 클래스의 <strong>모든 인스턴스가 공유하는 변수</strong>이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">InstCnt</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> instNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">InstCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tinstNum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"인스턴스 생성 : \"</span> <span class=\"token operator\">+</span> instNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassVar</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">InstCnt</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InstCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 인스턴스 생성 : 1</span>\n\t\t<span class=\"token class-name\">InstCnt</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InstCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 인스턴스 생성 : 2</span>\n\t\t<span class=\"token class-name\">InstCnt</span> cnt1 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">InstCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 인스턴스 생성 : 3</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"클래스-변수의-접근-방법\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EC%9D%98-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EB%B2%95\" aria-label=\"클래스 변수의 접근 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 변수의 접근 방법</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">AccessWay</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token class-name\">AccessWay</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">incrCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">incrCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tnum<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 내부에서 이름을 통한 접근</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassVarAccess</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">AccessWay</span> way <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AccessWay</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tway<span class=\"token punctuation\">.</span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 외부에서 인스턴스의 이름을 통한 접근</span>\n\t\t<span class=\"token class-name\">AccessWay</span><span class=\"token punctuation\">.</span>num<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 외부에서 클래스의 이름을 통한 접근</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"num : \"</span> <span class=\"token operator\">+</span> <span class=\"token class-name\">AccessWay</span><span class=\"token punctuation\">.</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 3</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>클래스 변수는 인스턴스의 생성과 상관이 없다</li>\n</ul>\n<h3 id=\"클래스-변수의-초기화-시점과-초기화-방법\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EC%9D%98-%EC%B4%88%EA%B8%B0%ED%99%94-%EC%8B%9C%EC%A0%90%EA%B3%BC-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95\" aria-label=\"클래스 변수의 초기화 시점과 초기화 방법 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 변수의 초기화 시점과 초기화 방법</h3>\n<p>클래스 변수는 <strong>인스턴스 생성 이전에 메모리 공간에 존재</strong>한다</p>\n<p>해당 클래스 정보가 가상 머신에 의해 <strong>읽히는 순간(클래스 로딩) 메모리 공간에 할당이 되고 초기화가 됨</strong></p>\n<p>(할당과 초기화는 인스턴스의 생성과 무관함)</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">InstCnt</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> instNum <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 변수의 정상적인 초기화</span>\n\t<span class=\"token class-name\">InstCnt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tinstNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 변수의 초기화가 아님!</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>위 코드는 인스턴스를 생성 할 때 마다 0으로 값이 바뀌게 됨</li>\n</ul>\n<h3 id=\"클래스-변수를-사용하는게-더-나은-경우\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B2%8C-%EB%8D%94-%EB%82%98%EC%9D%80-%EA%B2%BD%EC%9A%B0\" aria-label=\"클래스 변수를 사용하는게 더 나은 경우 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 변수를 사용하는게 더 나은 경우</h3>\n<p>인스턴스 간에 <strong>데이터 공유가 필요한 상황에서 클래스 변수를 선언</strong>한다</p>\n<p>e.g. <strong>참조 목적으로만 존재</strong>하는 값은 <strong>final이 선언된 클래스 변수에</strong> 담는다</p>\n<h2 id=\"static-선언을-붙여서-선언하는-클래스-메소드\" style=\"position:relative;\"><a href=\"#static-%EC%84%A0%EC%96%B8%EC%9D%84-%EB%B6%99%EC%97%AC%EC%84%9C-%EC%84%A0%EC%96%B8%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"static 선언을 붙여서 선언하는 클래스 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>static 선언을 붙여서 선언하는 클래스 메소드</h2>\n<p>클래스 내에 정의된 메소드에 static 선언을 하면 <strong>클래스 메소드</strong>가 됨</p>\n<h3 id=\"정의와-호출\" style=\"position:relative;\"><a href=\"#%EC%A0%95%EC%9D%98%EC%99%80-%ED%98%B8%EC%B6%9C\" aria-label=\"정의와 호출 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>정의와 호출</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">NumberPrinter</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> myNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token comment\">// 클래스 메소드</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showInt</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token comment\">// 인스턴스 메소드</span>\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">setMyNumber</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tmyNum <span class=\"token operator\">=</span> n<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">void</span> <span class=\"token function\">showMyNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token function\">showInt</span><span class=\"token punctuation\">(</span>myNum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">ClassMethod</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> args<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">NumberPrinter</span><span class=\"token punctuation\">.</span><span class=\"token function\">showInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 클래스 이름을 통한 클래스 메소드 호출</span>\n\t\t\n\t\t<span class=\"token class-name\">NumberPrinter</span> np <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NumberPrinter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnp<span class=\"token punctuation\">.</span><span class=\"token function\">showInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 인스턴스 이름을 통한 클래스 메소드 호출</span>\n\t\tnp<span class=\"token punctuation\">,</span><span class=\"token function\">setMyNumber</span><span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t\tnp<span class=\"token punctuation\">,</span><span class=\"token function\">showMyNumber</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"클래스-메소드-특성\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%8A%B9%EC%84%B1\" aria-label=\"클래스 메소드 특성 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 메소드 특성</h3>\n<ul>\n<li>모두 <strong>외부에 기능을 제공하기 위한 메소드</strong>이다</li>\n<li>모두 <strong>인스턴스 변수의 값을 참조하거나 수정하지 않는다</strong></li>\n</ul>\n<h3 id=\"클래스-메소드를-사용하는게-더-나은-경우\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B2%8C-%EB%8D%94-%EB%82%98%EC%9D%80-%EA%B2%BD%EC%9A%B0\" aria-label=\"클래스 메소드를 사용하는게 더 나은 경우 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 메소드를 사용하는게 더 나은 경우</h3>\n<p>클래스 메소드의 특성에 맞게 <strong>인스턴스 변수를 사용하지 않는 경우</strong>에 클래스 메소드가 인스턴스에 속할 이유가 없으므로 클래스 메소드로 정의하여 사용하는 것이 좋다</p>\n<h3 id=\"클래스-메소드에서-인스턴스-변수에-접근이-가능할까\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EC%97%90%EC%84%9C-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98%EC%97%90-%EC%A0%91%EA%B7%BC%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%A0%EA%B9%8C\" aria-label=\"클래스 메소드에서 인스턴스 변수에 접근이 가능할까 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 메소드에서 인스턴스 변수에 접근이 가능할까?</h3>\n<p>인스턴스 변수는 인스턴스에 속해 <strong>인스턴스가 생성이 되어야 메모리 공간에 존재</strong>하는 반면</p>\n<p>클래스 메소드는 <strong>인스턴스 생성 이전부터 호출이 가능</strong>함</p>\n<ul>\n<li>클래스 메소드는 인스턴스에 속하지 않으므로 <strong>인스턴스 변수에 접근이 불가능</strong>하다</li>\n<li>같은 이유로 클래스 메소드는 <strong>인스턴스 메소드의 호출도 불가능</strong>하다</li>\n</ul>\n<p>하지만 아래와 같이 같은 클래스에 정의되어 있는 다른 <strong>클래스 메소드</strong>나 성격이 동일한 <strong>클래스 변수</strong>에는 <strong>접근이 가능</strong>함</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> AAA <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> num <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">showNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">addNum</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tnum <span class=\"token operator\">+=</span> n<span class=\"token punctuation\">;</span>\n\t\t<span class=\"token function\">showNum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"systemoutprintln\" style=\"position:relative;\"><a href=\"#systemoutprintln\" aria-label=\"systemoutprintln permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>System.out.println()</h2>\n<ul>\n<li>\n<p>System은 자바에서 제공하는 클래스로 java.lang 패키지에 묶여있음</p>\n<p>원칙적으로는 java.lang.System.out.println(...); 으로 호출해야 하나 컴파일러가 import java.lang.*을 자동으로 삽입해주기 때문에 생략이 가능함</p>\n</li>\n<li>\n<p>out은 System 클래스 내에 아래와 같이 선언되어 있는 클래스 변수임</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token keyword\">final</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">System</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Object</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">PrintStream</span> out<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 참조변수 out</span>\n\t<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n</li>\n<li>println 은 PrintStream 클래스의 인스턴스 메소드임</li>\n</ul>\n<p>⇒ System 에 위치한 클래스 변수 out이 참조하는 인스턴스의 println 메소드를 호출하는 문장</p>\n<hr>\n<h1 id=\"11-메소드-오버로딩과-string-클래스\" style=\"position:relative;\"><a href=\"#11-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9%EA%B3%BC-string-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"11 메소드 오버로딩과 string 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>11. 메소드 오버로딩과 String 클래스</h1>\n<h2 id=\"메소드-오버로딩\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9\" aria-label=\"메소드 오버로딩 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드 오버로딩</h2>\n<p>호출할 메소드를 찾을 때 두가지 정보를 참조하여 찾음</p>\n<ul>\n<li>메소드의 <strong>이름</strong></li>\n<li>메소드의 <strong>매개변수 정보</strong></li>\n</ul>\n<p>오버로딩은 <strong>매개변수 선언이 다르면 동일한 이름의 메소드 정의를 허용</strong>하는 것임</p>\n<p>구체적으로 <strong>매개변수의 수 또는 형(type)이 달라야 함</strong></p>\n<h3 id=\"생성자의-오버로딩\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9\" aria-label=\"생성자의 오버로딩 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자의 오버로딩</h3>\n<p>생성자도 매개변수의 선언이 다르면 둘 이상 정의가 가능함</p>\n<ul>\n<li>\n<p>키워드 this를 이용한 다른 생성자 호출</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Person</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> regiNum<span class=\"token punctuation\">;</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> passNum<span class=\"token punctuation\">;</span>\n\t\n\t<span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> rnum<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> pnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tregiNum <span class=\"token operator\">=</span> rnum<span class=\"token punctuation\">;</span>\n\t\tpassNum <span class=\"token operator\">=</span> pnum<span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token class-name\">Person</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> rnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\tregiNum <span class=\"token operator\">=</span> rnum<span class=\"token punctuation\">;</span>\n\t\tpassNum <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n\n\t\t<span class=\"token comment\">// 위의 코드를 아래와 같이 적을 수 있음</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">(</span>rnum<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>this는 오버로딩 된 다른 생성자를 의미함</p>\n<ul>\n<li>\n<p>키워드 this를 이용한 인스턴스 변수의 접근</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleBox</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">private</span> <span class=\"token keyword\">int</span> data<span class=\"token punctuation\">;</span>\n\t<span class=\"token class-name\">SimpleBox</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>data <span class=\"token operator\">=</span> data<span class=\"token punctuation\">;</span> <span class=\"token comment\">// 매개변수 data의 값을 인스턴스 변수 data에 저장</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>this.data 에서 this는 이 문장이 속한 인스턴스라는 의미로 인스턴스 변수를 가리킴</p>\n</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"string-클래스-1\" style=\"position:relative;\"><a href=\"#string-%ED%81%B4%EB%9E%98%EC%8A%A4-1\" aria-label=\"string 클래스 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 클래스</h2>\n<h3 id=\"string-인스턴스를-생성하는-두가지-방법의-차이점\" style=\"position:relative;\"><a href=\"#string-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%8A%94-%EB%91%90%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\" aria-label=\"string 인스턴스를 생성하는 두가지 방법의 차이점 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 인스턴스를 생성하는 두가지 방법의 차이점</h3>\n<ol>\n<li>\n<p>문자열 선언만 하여 인스턴스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Simple String\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Simple String\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str1 <span class=\"token operator\">==</span> str2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n<span class=\"token comment\">// str1과 str2는 동일한 인스턴스를 참조하고 있다</span></code></pre></div>\n</li>\n<li>\n<p>new로 String 클래스의 인스턴스 생성</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> str3 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> str4 <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Simple String\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span>str3 <span class=\"token operator\">==</span> str4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token comment\">// str3과 str4는 서로 다른 인스턴스이다</span></code></pre></div>\n</li>\n</ol>\n<p>String 인스턴스는 <strong>immutable 인스턴스</strong>이며 String 인스턴스에서 <strong>변경 할 수 없는 것</strong>은 인스턴스가 갖는 <strong>문자열 내용</strong>이다</p>\n<p>따라서 위의 1번 코드와 같이 <strong>문자열 내용이 같으면 하나의 인스턴스를 생성해서 이를 공유하는 방식</strong>으로 코드를 처리함</p>\n<p>이로 인해 생성되는 <strong>인스턴스의 수는 줄고 성능이 향상</strong>됨</p>\n<ul>\n<li>\n<p>이렇게 하나의 인스턴스를 공유하면 문제가 생기지 않을까?</p>\n<p>⇒ 대부분의 경우 문제 되지 않음. String 클래스는 그 안에 저장된 데이터를 수정할 수 없는, 참조만 가능한 인스턴스이기 때문에</p>\n</li>\n<li>String 인스턴스의 <strong>문자열 내용 비교</strong>를 위해서는 <strong>equals 메소드를 사용</strong>한다</li>\n</ul>\n<h2 id=\"string-클래스의-메소드\" style=\"position:relative;\"><a href=\"#string-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"string 클래스의 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>String 클래스의 메소드</h2>\n<h3 id=\"문자열-연결시키기--concatenating\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EA%B2%B0%EC%8B%9C%ED%82%A4%EA%B8%B0--concatenating\" aria-label=\"문자열 연결시키기  concatenating permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 연결시키기 : Concatenating</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * public String concat(String str);\n*/</span>\n\n<span class=\"token class-name\">String</span> str1 <span class=\"token operator\">=</span> <span class=\"token string\">\"Bread\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> str2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Coffee\"</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>str1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// CoffeeBread</span></code></pre></div>\n<h3 id=\"문자열의-일부를-추출하기--substring\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EC%9D%BC%EB%B6%80%EB%A5%BC-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0--substring\" aria-label=\"문자열의 일부를 추출하기  substring permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열의 일부를 추출하기 : Substring</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * public String substring(int beginIndex);\n * public String substring(int beginIndex, int endIndex);\n*/</span>\n\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefg\"</span><span class=\"token punctuation\">;</span>\nstr<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//cde</span></code></pre></div>\n<h3 id=\"문자열의-내용-비교--comparing\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EB%82%B4%EC%9A%A9-%EB%B9%84%EA%B5%90--comparing\" aria-label=\"문자열의 내용 비교  comparing permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열의 내용 비교 : comparing</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * public boolean equals(Object anObject);\n*/</span>\n\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"My House\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> isSame <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">equals</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My House\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><strong>사전 편찬 상 순서를 비교하는 메소드</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * public int compareTo(String anotherString);\n*/</span>\n\n<span class=\"token class-name\">String</span> str <span class=\"token operator\">=</span> <span class=\"token string\">\"My House\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> isSame <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">compareTo</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"My House\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>두 문자열의 내용이 일치하면 0 반환</li>\n<li>호출된 인스턴스의 문자열이 인자로 전달된 문자열보다 앞서면 0보다 작은 값 반환</li>\n<li>호출된 인스턴스의 문자열이 인자로 전달된 문자열보다 두서면 0보다 큰 값 반환</li>\n</ul>\n<h3 id=\"기본-자료형의-값을-문자열로-바꾸기\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%98-%EA%B0%92%EC%9D%84-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\" aria-label=\"기본 자료형의 값을 문자열로 바꾸기 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 자료형의 값을 문자열로 바꾸기</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">/**\n * static String valueOf(boolean b);\n * static String valueOf(char c);\n * static String valueOf(double d);\n * static String valueOf(float f);\n * static String valueOf(int i);\n * static String valueOf(long l);\n*/</span>\n\n<span class=\"token keyword\">double</span> e <span class=\"token operator\">=</span> <span class=\"token number\">2.718281</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> se <span class=\"token operator\">=</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"문자열-결합의-최적화--optimization-of-string-concatenation\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%B0%ED%95%A9%EC%9D%98-%EC%B5%9C%EC%A0%81%ED%99%94--optimization-of-string-concatenation\" aria-label=\"문자열 결합의 최적화  optimization of string concatenation permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문자열 결합의 최적화 : Optimization of String Concatenation</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> birth <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;양>\"</span> <span class=\"token operator\">+</span> <span class=\"token number\">7</span> <span class=\"token operator\">+</span> <span class=\"token string\">'.'</span> <span class=\"token operator\">+</span> <span class=\"token number\">16</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 혹은 String birth = \"&lt;양>\".concat(String.valueOf(7)).concat(String.valueOf('.')).concat(String.valueOf(16));</span></code></pre></div>\n<p>이렇게 문자열을 합할 경우 기본 자료형의 값을 문자열로 변환하는 과정을 여러번 거쳐야 함</p>\n<p>valueOf 메소드의 호출로 기본 자료형 → 문자열로 변환하는 일은 String 인스턴스의 생성을 의미하고</p>\n<p>concat 메소드는 호출 시마다 <strong>새로운 String 인스턴스를 생성</strong>함</p>\n<p>⇒ <strong>성능 악화로 이어짐</strong></p>\n<p>이러한 문제를 해결하기 위해 나온게 <strong>StringBuilder</strong> 라는 클래스</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">String</span> birth <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">StringBuilder</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"&lt;양>\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>이렇게 문자열을 구성하면 기본 자료형 값을 문자열로 변환할 필요가 없고, 새로운 인스턴스가 생성 되지도 않음</p>\n<h2 id=\"stringbuilder-클래스\" style=\"position:relative;\"><a href=\"#stringbuilder-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"stringbuilder 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringBuilder 클래스</h2>\n<p>StringBuilder 클래스는 내부적으로 문자열을 저장하기 위한 메모리 공간을 지니는데 </p>\n<p>이 공간은 String 클래스의 메모리 공간과는 달리 <strong>추가, 삭제하는 것이 가능</strong>함</p>\n<p>따라서 <strong>수정하면서 유지해야 할 문자열</strong>이 있으면 <strong>StringBuilder 클래스</strong>를 <strong>이용</strong>하는 것이 유용</p>\n<h3 id=\"제공하는-메소드\" style=\"position:relative;\"><a href=\"#%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"제공하는 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>제공하는 메소드</h3>\n<ul>\n<li>\n<p>기본 자료형 데이터를 문자열 내용에 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBuilder</span> <span class=\"token function\">append</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// 외에도 boolean, char등 기본 자료형 데이터를 인자값으로 받도록 오버로딩 되어있음</span></code></pre></div>\n</li>\n<li>\n<p>인덱스 start에서부터 end 이전까지의 내용을 삭제</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBuilder</span> <span class=\"token function\">delete</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>인덱스 offset의 위치에 str에 전달된 문자열 추가</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBuilder</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>인덱스 start에서부터 end 이전까지의 내용을 str의 문자열로 대체</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBuilder</span> <span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end<span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>저장된 문자열의 내용을 뒤집는다</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBuilder</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>인덱스 start에서부터 end 이전까지의 내용만 담은 String 인스턴스의 생성 및 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> start<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> end<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n<li>\n<p>저장된 문자열의 내용을 담은 String 인스턴스의 생성 및 반환</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">public</span> <span class=\"token class-name\">String</span> <span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n</li>\n</ul>\n<h3 id=\"인스턴스-생성-과정에서-메모리-공간-확보\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%B5%EA%B0%84-%ED%99%95%EB%B3%B4\" aria-label=\"인스턴스 생성 과정에서 메모리 공간 확보 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 생성 과정에서 메모리 공간 확보</h3>\n<p>StringBuilder 인스턴스는 메모리 공간을 스스로 관리하여 부족하면 늘리지만 생성 시 공간 크기를 할당해 줄 수 있음</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token comment\">// 16개의 문자를 저장 할 수 있는 메모리 공간 확보</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBulder</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// capacity개의 문자를 저장 할 수 있는 메모리 공간 확보</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBulder</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> capacity<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 전달되는 문자열과 16개의 문자를 저장할 수 있는 메모리 공간 확비</span>\n<span class=\"token keyword\">public</span> <span class=\"token class-name\">StringBulder</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"stringbuilder-클래스-이전에-사용되던-stringbuffer-클래스\" style=\"position:relative;\"><a href=\"#stringbuilder-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EC%A0%84%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8D%98-stringbuffer-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"stringbuilder 클래스 이전에 사용되던 stringbuffer 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>StringBuilder 클래스 이전에 사용되던 StringBuffer 클래스</h3>\n<p>공통점</p>\n<ul>\n<li>생성자를 포함한 메소드의 수</li>\n<li>메소드의 기능</li>\n<li>메소드의 이름과 매개변수의 선언</li>\n</ul>\n<p>차이점</p>\n<ul>\n<li><strong>StringBuffer</strong>는 쓰레드에 안전하지만(<strong>멀티 쓰레드 환경에서 안전하게 동작하도록 만들어짐</strong>) <strong>StringBuilder</strong>는 <strong>쓰레드에 안전하지 않다</strong></li>\n<li>이로 인해 <strong>StringBuffer</strong>는 *<strong>*속도가 **느려지고 StringBuilder</strong>는 *<strong>*속도가 **빠름</strong></li>\n</ul>\n<hr>\n<h1 id=\"12-콘솔-입력과-출력\" style=\"position:relative;\"><a href=\"#12-%EC%BD%98%EC%86%94-%EC%9E%85%EB%A0%A5%EA%B3%BC-%EC%B6%9C%EB%A0%A5\" aria-label=\"12 콘솔 입력과 출력 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>12. 콘솔 입력과 출력</h1>\n<h2 id=\"콘솔-입력\" style=\"position:relative;\"><a href=\"#%EC%BD%98%EC%86%94-%EC%9E%85%EB%A0%A5\" aria-label=\"콘솔 입력 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콘솔 입력</h2>\n<h3 id=\"scanner-클래스\" style=\"position:relative;\"><a href=\"#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4\" aria-label=\"scanner 클래스 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scanner 클래스</h3>\n<p>생성자로 전달되는 대상으로부터 데이터를 추출하는 기능을 제공함</p>\n<p>이 클래스가 속한 패키지는 java.util 이고 이 클래스에 정의된 생성자 중 일부는 아래와 같음</p>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">File</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">String</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">InputStream</span> source<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"scanner-클래스의-키보드-적용\" style=\"position:relative;\"><a href=\"#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%ED%82%A4%EB%B3%B4%EB%93%9C-%EC%A0%81%EC%9A%A9\" aria-label=\"scanner 클래스의 키보드 적용 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scanner 클래스의 키보드 적용</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token class-name\">Scanner</span> sc <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Scanner</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>in<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h3 id=\"scanner-클래스의-주요-메소드\" style=\"position:relative;\"><a href=\"#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"scanner 클래스의 주요 메소드 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Scanner 클래스의 주요 메소드</h3>\n<div class=\"gatsby-highlight\" data-language=\"java\"><pre class=\"language-java\"><code class=\"language-java\"><span class=\"token keyword\">int</span> <span class=\"token function\">netxInt</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">byte</span> <span class=\"token function\">nextByte</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token class-name\">String</span> <span class=\"token function\">nextLine</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">double</span> <span class=\"token function\">nextDouble</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">boolean</span> <span class=\"token function\">nextBoolean</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D-%EC%8B%9C%EC%9E%91%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%B5%9C%EC%86%8C%ED%95%9C%EC%9D%98-%EC%A4%80%EB%B9%84\">프로그래밍 시작을 위한 최소한의 준비</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/programming/java-memory-model/#1-jdk-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C\">1. JDK 다운로드</a></li>\n<li><a href=\"/programming/java-memory-model/#2-jdk-%EC%84%A4%EC%B9%98\">2. JDK 설치</a></li>\n<li><a href=\"/programming/java-memory-model/#3-%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-path-%EC%84%A4%EC%A0%95\">3. 환경 변수 Path 설정</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EA%B3%BC-%EC%8B%A4%ED%96%89-%EC%9B%90%EB%A6%AC\">자바 프로그램과 실행 원리</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94-%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%A8%EC%9D%98-%EC%8B%A4%ED%96%89-%EA%B5%AC%EC%A1%B0\">자바 프로그램의 실행 구조</a></li>\n<li><a href=\"/programming/java-memory-model/#jvm-%EA%B5%AC%EC%84%B1\">JVM 구성</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94-%EC%BB%B4%ED%8C%8C%EC%9D%BC%EB%9F%AC%EC%99%80-%EB%B0%94%EC%9D%B4%ED%8A%B8-%EC%BD%94%EB%93%9C\">자바 컴파일러와 바이트 코드</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94-%EC%BD%94%EB%93%9C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\">자바 코드 살펴보기</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%A3%BC%EC%84%9D\">주석</a></li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EB%B3%80%EC%88%98%EC%99%80-%EC%9E%90%EB%A3%8C%ED%98%95\">변수와 자료형</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%ED%95%B4%EC%99%80-%ED%99%9C%EC%9A%A9\">변수의 이해와 활용</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EB%B3%80%EC%88%98\"><strong>변수</strong></a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%98-%EC%A2%85%EB%A5%98%EC%99%80-%EA%B5%AC%EB%B6%84\">자료형의 종류와 구분</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94%EC%9D%98-%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95\">자바의 기본 자료형</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%95%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95--byte-short-int-long\">정수 자료형 : byte, short, int, long</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%8B%A4%EC%88%98-%EC%9E%90%EB%A3%8C%ED%98%95--float-double\">실수 자료형 : float, double</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%AC%B8%EC%9E%90-%EC%9E%90%EB%A3%8C%ED%98%95--char\">문자 자료형 : char</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%85%BC%EB%A6%AC-%EC%9E%90%EB%A3%8C%ED%98%95--boolean\">논리 자료형 : boolean</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#03-%EC%83%81%EC%88%98%EC%99%80-%ED%98%95-%EB%B3%80%ED%99%98\">03. 상수와 형 변환</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%83%81%EC%88%98constants\">상수(Constants)</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94%EC%9D%98-%EC%9D%BC%EB%B0%98%EC%A0%81%EC%9D%B8-%EC%83%81%EC%88%98\">자바의 일반적인 상수</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%83%81%EC%88%98%EC%9D%98-%EB%B3%80%EC%88%98%EB%AA%85-%EA%B4%80%EB%A1%80\">상수의 변수명 관례</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%A6%AC%ED%84%B0%EB%9F%B4literals%EC%97%90-%EB%8C%80%ED%95%9C-%EC%9D%B4%ED%95%B4\">리터럴(Literals)에 대한 이해</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%95%EC%88%98%ED%98%95-%EC%83%81%EC%88%98%EC%9D%98-%ED%91%9C%ED%98%84-%EB%B0%A9%EB%B2%95\">정수형 상수의 표현 방법</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%8B%A4%EC%88%98%ED%98%95-%EC%83%81%EC%88%98\">실수형 상수</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%B6%80%EC%9A%B8%ED%98%95-%EC%83%81%EC%88%98%EC%99%80-%EB%AC%B8%EC%9E%90%ED%98%95-%EC%83%81%EC%88%98\">부울형 상수와 문자형 상수</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%ED%98%95-%EB%B3%80%ED%99%98\">형 변환</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%8F%99-%ED%98%95-%EB%B3%80%ED%99%98implicit-conversion\">자동 형 변환(Implicit Conversion)</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%AA%85%EC%8B%9C%EC%A0%81-%ED%98%95-%EB%B3%80%ED%99%98explicit-conversion\">명시적 형 변환(Explicit Conversion)</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%97%B0%EC%82%B0%EC%9E%90operators\">연산자(Operators)</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EC%9D%B4%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\">자바에서 제공하는 이항 연산자들</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90%EC%99%80-%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90-------\">대입 연산자와 산술 연산자 : =, +, , *, /, %</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%B3%B5%ED%95%A9compound-%EB%8C%80%EC%9E%85-%EC%97%B0%EC%82%B0%EC%9E%90\">복합(Compound) 대입 연산자</a></li>\n<li><a href=\"/programming/java-memory-model/#%EA%B4%80%EA%B3%84-%EC%97%B0%EC%82%B0%EC%9E%90----%E2%89%A4-%E2%89%A5--%E2%89%A0\">관계 연산자 : &#x3C;, >, ≤, ≥, ==, ≠</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%85%BC%EB%A6%AC-%EC%97%B0%EC%82%B0%EC%9E%90----\">논리 연산자 : &#x26;&#x26;, ||, !</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94%EC%97%90%EC%84%9C-%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EB%8B%A8%ED%95%AD-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\">자바에서 제공하는 단항 연산자들</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EB%B6%80%ED%98%B8-%EC%97%B0%EC%82%B0%EC%9E%90\">부호 연산자</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%A6%9D%EA%B0%80-%EB%B0%8F-%EA%B0%90%EC%86%8C-%EC%97%B0%EC%82%B0%EC%9E%90---\">증가 및 감소 연산자 : ++, —</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EB%B9%84%ED%8A%B8%EB%A5%BC-%EB%8C%80%EC%83%81%EC%9C%BC%EB%A1%9C-%ED%95%98%EB%8A%94-%EC%97%B0%EC%82%B0%EC%9E%90%EB%93%A4\">비트를 대상으로 하는 연산자들</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EB%B9%84%ED%8A%B8-%EC%97%B0%EC%82%B0%EC%9E%90%EC%9D%98-%EC%9D%B4%ED%95%B4\">비트 연산자의 이해</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#07-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4\">07. 클래스와 인스턴스</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A0%95%EC%9D%98%EC%99%80-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1\">클래스의 정의와 인스턴스 생성</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4class--%EB%8D%B0%EC%9D%B4%ED%84%B0data--%EB%A9%94%EC%86%8C%EB%93%9Cmethod\">클래스(Class) = 데이터(Data) + 메소드(Method)</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EA%B5%AC%EC%84%B1\">클래스의 구성</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EA%B0%9D%EC%B2%B4\">인스턴스 (=객체)</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%B0%B8%EC%A1%B0%EB%B3%80%EC%88%98reference-variable%EC%9D%98-%ED%8A%B9%EC%84%B1\">참조변수(Reference Variable)의 특성</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%83%9D%EC%84%B1%EC%9E%90constructor%EC%99%80-string-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%86%8C%EA%B0%9C\">생성자(Constructor)와 String 클래스의 소개</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#string-%ED%81%B4%EB%9E%98%EC%8A%A4\">String 클래스</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%83%9D%EC%84%B1%EC%9E%90constructor\">생성자(Constructor)</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%94%94%ED%8F%B4%ED%8A%B8-%EC%83%9D%EC%84%B1%EC%9E%90default-constructor\">디폴트 생성자(Default Constructor)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%9E%90%EB%B0%94%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99naming-rule\">자바의 이름 규칙(Naming Rule)</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99\">클래스의 이름 규칙</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%A9%94%EC%86%8C%EB%93%9C%EC%99%80-%EB%B3%80%EC%88%98%EC%9D%98-%EC%9D%B4%EB%A6%84-%EA%B7%9C%EC%B9%99\">메소드와 변수의 이름 규칙</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#08-%ED%8C%A8%ED%82%A4%EC%A7%80%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%A8%EC%8A%A4\">08. 패키지와 클래스 패스</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%8C%A8%EC%8A%A4class-path\">클래스 패스(Class Path)</a></li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%ED%8C%A8%ED%82%A4%EC%A7%80package%EC%9D%98-%EC%9D%B4%ED%95%B4\">패키지(Package)의 이해</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%9D%B4%EB%A6%84-%EA%B4%80%EB%A1%80\">패키지 이름 관례</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#09-%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89-%EA%B7%B8%EB%A6%AC%EA%B3%A0-%EC%BA%A1%EC%8A%90%ED%99%94\">09. 정보 은닉 그리고 캡슐화</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89information-hiding\">정보 은닉(Information Hiding)</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%95%EB%B3%B4-%EC%9D%80%EB%8B%89%EC%9D%84-%ED%95%B4%EC%95%BC%ED%95%98%EB%8A%94-%EC%9D%B4%EC%9C%A0\">정보 은닉을 해야하는 이유</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%95%EB%B3%B4%EC%9D%98-%EC%9D%80%EB%8B%89%EC%9D%84-%EC%9C%84%ED%95%9C-private-%EC%84%A0%EC%96%B8\">정보의 은닉을 위한 private 선언</a></li>\n<li><a href=\"/programming/java-memory-model/#%EA%B2%8C%ED%84%B0getter\">게터(Getter)</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%84%B8%ED%84%B0setter\">세터(Setter)</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%A0%91%EA%B7%BC-%EC%88%98%EC%A4%80-%EC%A7%80%EC%8B%9C%EC%9E%90access-level-modifiers\">접근 수준 지시자(Access-level Modifiers)</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A0%95%EC%9D%98-%EB%8C%80%EC%83%81\">클래스의 정의 대상</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%A9%A4%EB%B2%84-%EB%8C%80%EC%83%81\">인스턴스 멤버 대상</a></li>\n</ul>\n</li>\n<li><a href=\"/programming/java-memory-model/#%EC%BA%A1%EC%8A%90%ED%99%94encapsulation\">캡슐화(Encapsulation)</a></li>\n<li>\n<p><a href=\"/programming/java-memory-model/#static-%EC%84%A0%EC%96%B8%EC%9D%84-%EB%B6%99%EC%97%AC%EC%84%9C-%EC%84%A0%EC%96%B8%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98\">static 선언을 붙여서 선언하는 클래스 변수</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EC%9D%98-%EC%A0%91%EA%B7%BC-%EB%B0%A9%EB%B2%95\">클래스 변수의 접근 방법</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EC%9D%98-%EC%B4%88%EA%B8%B0%ED%99%94-%EC%8B%9C%EC%A0%90%EA%B3%BC-%EC%B4%88%EA%B8%B0%ED%99%94-%EB%B0%A9%EB%B2%95\">클래스 변수의 초기화 시점과 초기화 방법</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B3%80%EC%88%98%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B2%8C-%EB%8D%94-%EB%82%98%EC%9D%80-%EA%B2%BD%EC%9A%B0\">클래스 변수를 사용하는게 더 나은 경우</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#static-%EC%84%A0%EC%96%B8%EC%9D%84-%EB%B6%99%EC%97%AC%EC%84%9C-%EC%84%A0%EC%96%B8%ED%95%98%EB%8A%94-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C\">static 선언을 붙여서 선언하는 클래스 메소드</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%95%EC%9D%98%EC%99%80-%ED%98%B8%EC%B6%9C\">정의와 호출</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%8A%B9%EC%84%B1\">클래스 메소드 특성</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EB%8A%94%EA%B2%8C-%EB%8D%94-%EB%82%98%EC%9D%80-%EA%B2%BD%EC%9A%B0\">클래스 메소드를 사용하는게 더 나은 경우</a></li>\n<li><a href=\"/programming/java-memory-model/#%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EC%97%90%EC%84%9C-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%B3%80%EC%88%98%EC%97%90-%EC%A0%91%EA%B7%BC%EC%9D%B4-%EA%B0%80%EB%8A%A5%ED%95%A0%EA%B9%8C\">클래스 메소드에서 인스턴스 변수에 접근이 가능할까?</a></li>\n</ul>\n</li>\n<li><a href=\"/programming/java-memory-model/#systemoutprintln\">System.out.println()</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#11-%EB%A9%94%EC%86%8C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9%EA%B3%BC-string-%ED%81%B4%EB%9E%98%EC%8A%A4\">11. 메소드 오버로딩과 String 클래스</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EB%A9%94%EC%86%8C%EB%93%9C-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9\">메소드 오버로딩</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%83%9D%EC%84%B1%EC%9E%90%EC%9D%98-%EC%98%A4%EB%B2%84%EB%A1%9C%EB%94%A9\">생성자의 오버로딩</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#string-%ED%81%B4%EB%9E%98%EC%8A%A4-1\">String 클래스</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#string-%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4%EB%A5%BC-%EC%83%9D%EC%84%B1%ED%95%98%EB%8A%94-%EB%91%90%EA%B0%80%EC%A7%80-%EB%B0%A9%EB%B2%95%EC%9D%98-%EC%B0%A8%EC%9D%B4%EC%A0%90\">String 인스턴스를 생성하는 두가지 방법의 차이점</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#string-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EB%A9%94%EC%86%8C%EB%93%9C\">String 클래스의 메소드</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EB%AC%B8%EC%9E%90%EC%97%B4-%EC%97%B0%EA%B2%B0%EC%8B%9C%ED%82%A4%EA%B8%B0--concatenating\">문자열 연결시키기 : Concatenating</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EC%9D%BC%EB%B6%80%EB%A5%BC-%EC%B6%94%EC%B6%9C%ED%95%98%EA%B8%B0--substring\">문자열의 일부를 추출하기 : Substring</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%AC%B8%EC%9E%90%EC%97%B4%EC%9D%98-%EB%82%B4%EC%9A%A9-%EB%B9%84%EA%B5%90--comparing\">문자열의 내용 비교 : comparing</a></li>\n<li><a href=\"/programming/java-memory-model/#%EA%B8%B0%EB%B3%B8-%EC%9E%90%EB%A3%8C%ED%98%95%EC%9D%98-%EA%B0%92%EC%9D%84-%EB%AC%B8%EC%9E%90%EC%97%B4%EB%A1%9C-%EB%B0%94%EA%BE%B8%EA%B8%B0\">기본 자료형의 값을 문자열로 바꾸기</a></li>\n<li><a href=\"/programming/java-memory-model/#%EB%AC%B8%EC%9E%90%EC%97%B4-%EA%B2%B0%ED%95%A9%EC%9D%98-%EC%B5%9C%EC%A0%81%ED%99%94--optimization-of-string-concatenation\">문자열 결합의 최적화 : Optimization of String Concatenation</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#stringbuilder-%ED%81%B4%EB%9E%98%EC%8A%A4\">StringBuilder 클래스</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#%EC%A0%9C%EA%B3%B5%ED%95%98%EB%8A%94-%EB%A9%94%EC%86%8C%EB%93%9C\">제공하는 메소드</a></li>\n<li><a href=\"/programming/java-memory-model/#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EC%83%9D%EC%84%B1-%EA%B3%BC%EC%A0%95%EC%97%90%EC%84%9C-%EB%A9%94%EB%AA%A8%EB%A6%AC-%EA%B3%B5%EA%B0%84-%ED%99%95%EB%B3%B4\">인스턴스 생성 과정에서 메모리 공간 확보</a></li>\n<li><a href=\"/programming/java-memory-model/#stringbuilder-%ED%81%B4%EB%9E%98%EC%8A%A4-%EC%9D%B4%EC%A0%84%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8D%98-stringbuffer-%ED%81%B4%EB%9E%98%EC%8A%A4\">StringBuilder 클래스 이전에 사용되던 StringBuffer 클래스</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><a href=\"/programming/java-memory-model/#12-%EC%BD%98%EC%86%94-%EC%9E%85%EB%A0%A5%EA%B3%BC-%EC%B6%9C%EB%A0%A5\">12. 콘솔 입력과 출력</a></p>\n<ul>\n<li>\n<p><a href=\"/programming/java-memory-model/#%EC%BD%98%EC%86%94-%EC%9E%85%EB%A0%A5\">콘솔 입력</a></p>\n<ul>\n<li><a href=\"/programming/java-memory-model/#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4\">Scanner 클래스</a></li>\n<li><a href=\"/programming/java-memory-model/#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%ED%82%A4%EB%B3%B4%EB%93%9C-%EC%A0%81%EC%9A%A9\">Scanner 클래스의 키보드 적용</a></li>\n<li><a href=\"/programming/java-memory-model/#scanner-%ED%81%B4%EB%9E%98%EC%8A%A4%EC%9D%98-%EC%A3%BC%EC%9A%94-%EB%A9%94%EC%86%8C%EB%93%9C\">Scanner 클래스의 주요 메소드</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"자바의 메모리 모델","date":"July 22, 2020","category":"Java","tags":["Java","Book"],"featuredImage":{"childImageSharp":{"original":{"src":"/static/thumbnail-b485c0608dd48ef901ca76e61ea52b68.png","width":1200,"height":350}}}}}},"pageContext":{"slug":"/programming/java-memory-model","previous":{"id":"5dd0a91d-e458-57f5-b266-cb5ed098a080","fields":{"slug":"/programming/java-generics"},"frontmatter":{"title":"제너릭(Generics)","tags":["Java","Book"]}},"next":{"id":"930e8775-4d51-5406-8ec0-726f51374466","fields":{"slug":"/programming/java-stream"},"frontmatter":{"title":"스트림","tags":["Java","Book"]}}}}}