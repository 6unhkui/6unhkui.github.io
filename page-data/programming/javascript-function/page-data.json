{"componentChunkName":"component---src-templates-post-tsx","path":"/programming/javascript-function","result":{"data":{"site":{"siteMetadata":{"author":"Inkyung"}},"markdownRemark":{"fields":{"slug":"/programming/javascript-function"},"id":"f372d536-6704-548d-abc3-49771ca6cdc2","excerpt":"모던 자바스크립트 Deep Dive…","html":"<blockquote>\n<p><a href=\"http://www.yes24.com/Product/Goods/92742567\" target=\"_blank\" rel=\"noreferrer noopener\">모던 자바스크립트 Deep Dive</a>를 읽고 학습한 내용을 간략하게 정리한 글입니다.<br/>\n자바스크립트 기본 개념과 동작 원리를 잘 다루고 있는 책입니다. 상세한 내용은 책을 참고해주세요.</p>\n</blockquote>\n<h1 id=\"함수-표현식\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D\" aria-label=\"함수 표현식 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 표현식</h1>\n<p>표현식은 값으로 평가될 수 있는 문을 말한다.<br/>\n자바스크립트에서 함수는 <strong>일급 객체이기 때문에 함수 리터럴로 생성한 함수 객체를 변수에 할당 할 수 있다.</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">func</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"함수-선언문\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8\" aria-label=\"함수 선언문 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언문</h1>\n<p>함수 선언문으로 함수를 생성하면 <strong>함수 이름과 동일한 식별자를 생성해 함수 객체와 바인딩</strong>한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h1 id=\"함수-표현식과-함수-선언문에서의-호이스팅-차이\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EA%B3%BC-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%B0%A8%EC%9D%B4\" aria-label=\"함수 표현식과 함수 선언문에서의 호이스팅 차이 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 표현식과 함수 선언문에서의 호이스팅 차이</h1>\n<h3 id=\"함수-표현식-1\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-1\" aria-label=\"함수 표현식 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 표현식</h3>\n<p><strong>함수 표현식</strong>으로 함수를 생성할 경우 <strong>변수 호이스팅</strong>이 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>prn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// undefined</span>\n<span class=\"token function\">prn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안녕'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// TypeError: prn is not a function</span>\n\n<span class=\"token keyword\">var</span> <span class=\"token function-variable function\">prn</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>var 키워드로 선언한 변수는 평가 단계에서 선언과 동시에 undefined로 초기화된다.<br/>\n<strong>변수에 함수 객체를 할당하는 코드가 실행되기 이전에는 값이 undefined</strong>이므로 함수를 호출할 경우 에러가 발생한다.</p>\n<h3 id=\"함수-선언문-1\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8-1\" aria-label=\"함수 선언문 1 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 선언문</h3>\n<p><strong>함수 선언문</strong>으로 함수를 생성할 경우 <strong>함수 호이스팅</strong>이 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>prn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// ƒ prn(str)</span>\n<span class=\"token function\">prn</span><span class=\"token punctuation\">(</span><span class=\"token string\">'안녕'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// '안녕'</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">prn</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>함수 선언문은 <strong>평가 단계에서 식별자를 실행 컨텍스트에 등록할 때 함수 객체로 값이 초기화</strong>된다.<br/>\n따라서 <strong>선언문 이전에 함수를 호출 할 수 있다.</strong></p>\n<h1 id=\"참조에-의한-전달과-외부-상태의-변경\" style=\"position:relative;\"><a href=\"#%EC%B0%B8%EC%A1%B0%EC%97%90-%EC%9D%98%ED%95%9C-%EC%A0%84%EB%8B%AC%EA%B3%BC-%EC%99%B8%EB%B6%80-%EC%83%81%ED%83%9C%EC%9D%98-%EB%B3%80%EA%B2%BD\" aria-label=\"참조에 의한 전달과 외부 상태의 변경 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>참조에 의한 전달과 외부 상태의 변경</h1>\n<p>매개 변수에 값이 전달될 때, <strong>원시 타입은 실제 값이 복사</strong>되지만 <strong>객체 타입은 참조 값이 복사</strong>된다.<br/>\n그러므로 함수 내부에서 객체 타입인 매개 변수의 값이 변경된다면 동일한 참조 값을 가지고 있는\n<strong>외부의 값도 함께 변경</strong>될 여지가 있다. (= side effect, 부수 효과)</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">let</span> name <span class=\"token operator\">=</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">let</span> person <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>name <span class=\"token operator\">:</span> <span class=\"token string\">'Jane'</span><span class=\"token punctuation\">,</span> age <span class=\"token operator\">:</span> <span class=\"token number\">20</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">chageName</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">primitive<span class=\"token punctuation\">,</span> obj</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    primitive <span class=\"token operator\">=</span> <span class=\"token string\">'Serina'</span><span class=\"token punctuation\">;</span>\n    obj<span class=\"token punctuation\">.</span>name <span class=\"token operator\">=</span> <span class=\"token string\">'Serina'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">chageName</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">,</span> person<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Jane</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// Serina</span></code></pre></div>\n<p>이를 방지하기 위해서 객체를 <strong>불변 객체로 만들어 사용</strong>하고, 값의 변경이 필요한 경우에는 <strong>값 자체를 복사하여 사용</strong>한다.<br/>\n이렇듯 <strong>외부 상태를 변경하지 않고 외부 상태에 의존하지 않으며, 오로지 매개 변수의 값만 사용하여 반환 값을 만들어 부수 효과를 줄이는 함수</strong>를 <strong>순수 함수</strong>라고 한다. 그리고 이러한 프로그래밍 기법을 <strong>함수형 프로그래밍</strong>이라 한다.</p>\n<h1 id=\"함수와-일급-객체\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EC%99%80-%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\" aria-label=\"함수와 일급 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수와 일급 객체</h1>\n<h2 id=\"일급-객체\" style=\"position:relative;\"><a href=\"#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\" aria-label=\"일급 객체 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>일급 객체</h2>\n<p>아래 조건을 만족하는 객체를 일급 객체라 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">1. 무명의 리터럴을 생성할 수 있다. 즉, 런타임에 생성이 가능하다.\n2. 변수나 자료구조(객체, 배열 등)에 저장 할 수 있다.\n3. 함수의 매개변수에 전달 할 수 있다.\n4. 함수의 반환 값으로 사용할 수 있다.</code></pre></div>\n<p><strong>자바스크립트에서 함수는 이 조건을 모두 만족하므로 일급 객체</strong>이다.<br/>\n함수는 값을 사용할 수 있는 곳(변수 할당문, 객체의 프로퍼티 값, 배열의 요소, 함수 호출의 인수, 함수 반환문)이라면<br/>\n어디서든 리터럴로 정의할 수 있으며 런타임에 함수 객체로 평가된다. </p>\n<h2 id=\"함수-객체의-프로퍼티\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98-%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"함수 객체의 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수 객체의 프로퍼티</h2>\n<p>함수도 객체이므로 자신만의 프로퍼티를 소유 할 수 있다. 자바스크립트의 함수 만이 가지고 있는 프로퍼티에 대해 알아보자</p>\n<h3 id=\"1-arguments-프로퍼티\" style=\"position:relative;\"><a href=\"#1-arguments-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"1 arguments 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>1. arguments 프로퍼티</h3>\n<p>함수 호출 시 <strong>전달된 인자들의 정보를 담고있는 순회 가능한 유사 배열 객체</strong>이다.<br/></p>\n<ul>\n<li><strong>유사 배열 객체</strong> : <strong>length 프로퍼티를 가진 객체</strong>로 <strong>for문을 순회 할 수 있는 객체</strong></li>\n</ul>\n<p>자바스크립트는 함수의 매개변수와 인수의 개수가 일치하는지 확인하지 않는다.<br/>\n따라서 함수 호출 시 매개변수 개수만큼 인수를 전달하지 않아도 함수가 동작하며 에러가 발생되지 않는다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x<span class=\"token punctuation\">,</span> y</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>arguments<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \n    <span class=\"token comment\">// Arguments(3) [1, 2, 3, callee: ƒ, Symbol(Symbol.iterator): ƒ]</span>\n\n    <span class=\"token keyword\">return</span> x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2 </span></code></pre></div>\n<p>arguments 객체는 전달된 <strong>인자 값을 프로퍼티 값으로 소유</strong>하며, 프로퍼티 키는 인자의 순서를 나타낸다.<br/>\narguments 객체의 callee 프로퍼티는 호출되어 arguments 객체를 생성한 함수, 즉 함수 자신을 가리킨다.<br/><br/></p>\n<p>arguments 프로퍼티 값은 배열이 아닌 <strong>유사 배열 객체이기 때문에 배열 메서드를 사용 할 수 없다.</strong><br/>\n배열 메서드를 사용하기 위해서는 유사 배열 객체를 배열로 변환하는 과정을 거쳐야하는데, <strong>ES6</strong>에서는 이런 번거로운 과정 없이 바로 인수 배열을 받을 수 있도록 <strong>Rest 파라미터를 도입</strong>하였다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sum</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token operator\">...</span>args</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> args<span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">acc<span class=\"token punctuation\">,</span> cur</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> acc <span class=\"token operator\">+</span> cur<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"2-caller-프로퍼티\" style=\"position:relative;\"><a href=\"#2-caller-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"2 caller 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>2. caller 프로퍼티</h3>\n<p>ECMAScript 사양에 포함되지 않은 비표준 프로퍼티이다.</p>\n<h3 id=\"3-length-프로퍼티\" style=\"position:relative;\"><a href=\"#3-length-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"3 length 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>3. length 프로퍼티</h3>\n<p><strong>매개변수의 수</strong>를 가리킨다. <br/>\narguments 객체의 length 프로퍼티와 함수 객체의 length 프로퍼티 값은 다를 수 있다는 것을 주의해야 한다.<br/></p>\n<ul>\n<li>arguments 객체의 length 프로퍼티 : 호출 시 전달된 인자의 개수</li>\n<li>함수 객체의 length 프로퍼티 : 매개 변수의 개수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> arguments<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 4</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>func<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 2</span></code></pre></div>\n<h3 id=\"4-name-프로퍼티\" style=\"position:relative;\"><a href=\"#4-name-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"4 name 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>4. name 프로퍼티</h3>\n<p><strong>함수 객체의 식별자 명</strong>을 나타낸다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">sayHello</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>sayHello<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 'sayHello'</span></code></pre></div>\n<h3 id=\"5-__proto__-접근자-프로퍼티\" style=\"position:relative;\"><a href=\"#5-__proto__-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"5 __proto__ 접근자 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>5. __proto__ 접근자 프로퍼티</h3>\n<p>모든 객체는 [[Prototype]] 이라는 내부 슬롯을 가진다. <br/>\n[[Prototype]] 내부 슬롯은 객체 지향 프로그래밍의 <strong>상속을 구현하는 프로토타입 객체</strong>를 가리킨다.<br/>\n__proto__ 프로퍼티는 [[Prototype]] 내부 슬롯이 가리키는 <strong>프로토타입 객체에 접근하기 위해 사용하는 접근자 프로퍼티</strong>이다.<br/>\n__proto__ 프로퍼티를 통해 객체가 상속받는 부모 객체에 접근 할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> obj <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> a<span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 객체 리터럴 방식으로 생성한 객체의 프로토타입 객체는 Object.prototype 이다.</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">.</span>__proto__ <span class=\"token operator\">===</span> <span class=\"token class-name\">Object</span><span class=\"token punctuation\">.</span>prototype<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// hasOwnProperty는 Object.prototype의 메서드다.</span>\n<span class=\"token comment\">// obj 객체는 Object.prototype을 상속 받고 있기 때문에 hasOwnProperty 메서드를 사용 할 수 있다.</span>\nobj<span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code></pre></div>\n<h3 id=\"6-prototype-프로퍼티\" style=\"position:relative;\"><a href=\"#6-prototype-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\" aria-label=\"6 prototype 프로퍼티 permalink\" class=\"anchor-header before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>6. prototype 프로퍼티</h3>\n<p><strong>생성자 함수로 호출 할 수 있는 객체(즉 constructor)만이 소유하는 프로퍼티</strong>이다.<br/>\n생성자 함수로 호출될 때 <strong>생성자 함수가 생성할 인스턴스의 프로토타입 객체</strong>를 가리킨다.<br/>\n생성자 함수의 <strong>prototype 프로퍼티에 바인딩되어 있는 객체</strong>가 생성자 함수로 생성한 <strong>인스턴스가 __proto__ 프로퍼티를 통해 접근하는 부모 객체</strong>인 것이다.<br/><br/></p>\n<p>일반 객체와 생성자 함수로 호출 할 수 없는 <strong>non-constructor 에는 prototype 프로퍼티가 존재하지 않는다.</strong><br/></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 함수 선언문은 constructor 이기 때문에 prototype 객체를 소유한다</span>\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prototype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span>\n\n<span class=\"token comment\">// 화살표 함수는 non-constructor 이기 때문에 prototype 객체를 소유하지 않는다.</span>\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">hasOwnProperty</span><span class=\"token punctuation\">(</span><span class=\"token string\">'prototype'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code></pre></div>","tableOfContents":"<ul>\n<li><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D\">함수 표현식</a></li>\n<li><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8\">함수 선언문</a></li>\n<li>\n<p><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D%EA%B3%BC-%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8%EC%97%90%EC%84%9C%EC%9D%98-%ED%98%B8%EC%9D%B4%EC%8A%A4%ED%8C%85-%EC%B0%A8%EC%9D%B4\">함수 표현식과 함수 선언문에서의 호이스팅 차이</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%ED%91%9C%ED%98%84%EC%8B%9D-1\">함수 표현식</a></li>\n<li><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%EC%84%A0%EC%96%B8%EB%AC%B8-1\">함수 선언문</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"/programming/javascript-function/#%EC%B0%B8%EC%A1%B0%EC%97%90-%EC%9D%98%ED%95%9C-%EC%A0%84%EB%8B%AC%EA%B3%BC-%EC%99%B8%EB%B6%80-%EC%83%81%ED%83%9C%EC%9D%98-%EB%B3%80%EA%B2%BD\">참조에 의한 전달과 외부 상태의 변경</a></li>\n<li>\n<p><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98%EC%99%80-%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\">함수와 일급 객체</a></p>\n<ul>\n<li><a href=\"/programming/javascript-function/#%EC%9D%BC%EA%B8%89-%EA%B0%9D%EC%B2%B4\">일급 객체</a></li>\n<li>\n<p><a href=\"/programming/javascript-function/#%ED%95%A8%EC%88%98-%EA%B0%9D%EC%B2%B4%EC%9D%98-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">함수 객체의 프로퍼티</a></p>\n<ul>\n<li><a href=\"/programming/javascript-function/#1-arguments-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">1. arguments 프로퍼티</a></li>\n<li><a href=\"/programming/javascript-function/#2-caller-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">2. caller 프로퍼티</a></li>\n<li><a href=\"/programming/javascript-function/#3-length-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">3. length 프로퍼티</a></li>\n<li><a href=\"/programming/javascript-function/#4-name-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">4. name 프로퍼티</a></li>\n<li><a href=\"/programming/javascript-function/#5-__proto__-%EC%A0%91%EA%B7%BC%EC%9E%90-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">5. __proto__ 접근자 프로퍼티</a></li>\n<li><a href=\"/programming/javascript-function/#6-prototype-%ED%94%84%EB%A1%9C%ED%8D%BC%ED%8B%B0\">6. prototype 프로퍼티</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"함수","date":"December 02, 2020","category":"Javascript","tags":["Javascript","Book"],"featuredImage":{"childImageSharp":{"original":{"src":"/static/thumbnail-9c7858c3cc94ee3a2a0ef3939739ca67.png","width":1400,"height":350}}}}}},"pageContext":{"slug":"/programming/javascript-function","previous":{"id":"ffcbd16f-cfe5-5dde-b75f-c36baa57d0cc","fields":{"slug":"/programming/javascript-data-type"},"frontmatter":{"title":"변수와 자료형","tags":["Javascript","Book"]}},"next":{"id":"2ab62a08-8a21-59db-977f-a0dedf432aed","fields":{"slug":"/programming/javascript-variable-keyword"},"frontmatter":{"title":"var, let, const 키워드의 차이점","tags":["Javascript","Book"]}}}}}