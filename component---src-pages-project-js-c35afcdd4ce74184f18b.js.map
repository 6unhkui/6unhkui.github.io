{"version":3,"sources":["webpack:///./src/components/Filter/switcher.js","webpack:///./src/components/Filter/search.js","webpack:///./src/components/Post/postDetail.js","webpack:///./src/pages/project.js","webpack:///./src/components/Post/posts.js","webpack:///./static/images/gradation-bg.png"],"names":["Switcher","items","selectedItem","onChange","className","data-category","onClick","e","target","dataset","category","map","v","i","key","toUpperCase","fieldValue","Search","input","value","useEffect","focus","icon","type","placeholder","ref","PostDetail","data","post","allMarkdownRemark","edges","useState","selectedCategory","setSelectedCategory","searchValue","setSearchValue","length","style","marginBottom","categories","posts","filter","s","node","frontmatter","trim","title","indexOf","tags","findIndex","a","ProjectPage","location","pageQuery","Posts","view","postsToShow","setPostsToShow","_infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","window","addEventListener","removeEventListener","slice","date","featuredImage","to","fields","slug","src","childImageSharp","resize","Thumbnail","dangerouslySetInnerHTML","__html","excerpt","tag","kebabCase","module","exports"],"mappings":"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","file":"component---src-pages-project-js-c35afcdd4ce74184f18b.js","sourcesContent":["import React from 'react';\n\nexport default function Switcher({ items, selectedItem = 'ALL', onChange}) {\n    return (\n      <div className=\"switcher-wrap\">\n        <div className={'switcher-option ' + (selectedItem === 'ALL' && 'selected')}\n             data-category=\"ALL\"\n             onClick={(e) => {onChange(e.target.dataset.category)}}>ALL</div>\n        {items.map((v, i) =>\n          (<div key={i}\n                className={'switcher-option ' + (selectedItem.toUpperCase() === `${v.fieldValue.toUpperCase()}` ? 'selected' : '')}\n                data-category={v.fieldValue}\n                onClick={(e) => {onChange(e.target.dataset.category)}}>\n            {v.fieldValue}\n          </div>))}\n      </div>\n    )\n}","import React, {useEffect} from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\n\nconst Search = ({value, onChange}) => {\n  let input;\n  useEffect(()=> {\n    input.focus();\n  }, []);\n\n\n  return (\n      <div className='search-wrap'>\n          <FontAwesomeIcon icon={\"search\"} className='ico-search'/>\n          <input type=\"text\"\n                 placeholder=\"검색어를 입력하세요.\"\n                 value={value}\n                 onChange={(e) => onChange(e.target.value)}\n                 className=\"search-input\"\n                 ref={(ref) => {input = ref;}}\n          />\n      </div>\n\n    )\n}\n\nexport default Search;","import React, {useState} from 'react';\nimport Posts from \"./posts\";\nimport Switcher from \"../Filter/switcher\";\nimport Search from \"../Filter/search\"\n\nexport default function PostDetail({data}) {\n  const post = data.allMarkdownRemark.edges;\n  const [selectedCategory, setSelectedCategory] = useState('ALL');\n  const [searchValue, setSearchValue] = useState('');\n  const changeCategory = value => {\n    setSelectedCategory(value);\n    setSearchValue('');\n  };\n\n  return ( \n        <section className=\"posts-wrap\">\n          <div className=\"posts container\">\n            {post.length > 0 &&\n              <div className='filter-wrap' style={{marginBottom : '1.8rem'}}>\n                <Switcher items={data.allMarkdownRemark.categories}\n                          selectedItem={selectedCategory}\n                          onChange={changeCategory}/>\n                <Search onChange={setSearchValue} value={searchValue}/>\n              </div>\n            }\n\n            <Posts posts={post.filter((s) => {\n                // 선택된 카테고리가 ALL일 경우, 모든 포스트를 보여주고\n                // ALL이 아닐 경우, 선택한 카테고리와 카테고리가 일치하는 포스트만 필터링\n                if(selectedCategory.toUpperCase() === 'ALL') return s;\n                else return s.node.frontmatter.category.toUpperCase() === selectedCategory.toUpperCase()})\n              .filter((s) => {\n                // 검색어가 없을 경우, 모든 포스트를 보여주고\n                // 검색어가 있을 경우, 제목과 태그에 일치하는 포스트만 필터링\n                if(searchValue.trim().length === 0) return s;\n                else {\n                  if(s.node.frontmatter.title.toUpperCase().indexOf(searchValue.trim().toUpperCase()) !== -1) return s;\n                  else if(s.node.frontmatter.tags.findIndex(a => a.toUpperCase().indexOf(searchValue.trim().toUpperCase()) !== -1) !== -1) return s;\n                  return null;\n                }})\n            }/>\n          </div>\n        </section>\n  )\n}\n","import React from 'react';\nimport Index from \"../components/Layout\"\nimport SEO from \"../components/seo\"\nimport PostDetail from \"../components/Post/postDetail\"\n\nconst ProjectPage = ({data, location}) => {\n  return (\n      <Index location={location}>\n        <SEO title=\"Project\"/>\n        <PostDetail data={data}/>\n      </Index>\n  )\n}\n\nexport default ProjectPage;\n\n\nexport const pageQuery = graphql`\nquery($path: String! = \"/project/\") {\n    allMarkdownRemark(filter: {fields: {slug: {regex: $path}}}, sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            tags\n            category\n            featuredImage {\n              childImageSharp{\n                resize(width: 700) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n      categories : group(field: frontmatter___category) {\n        fieldValue\n      }\n    }\n}`;\n","import React, {useState, useEffect} from 'react';\nimport { kebabCase } from 'lodash';\nimport { Link } from \"gatsby\"\nimport Thumbnail from \"../../../static/images/gradation-bg.png\";\n\nconst showCount = 6;\nconst Posts = ({posts, view = \"card\"}) => {\n  const [postsToShow, setPostsToShow] = useState(showCount);\n  \n  useEffect(() => {\n    window.addEventListener('scroll', _infiniteScroll, true);\n    return window.removeEventListener('scroll', _infiniteScroll);\n  }, []);\n\n  function _infiniteScroll()  {\n    let scrollHeight = Math.max(document.documentElement.scrollHeight, document.body.scrollHeight);\n    let scrollTop = Math.max(document.documentElement.scrollTop, document.body.scrollTop);\n    let clientHeight = document.documentElement.clientHeight;\n\n    if(scrollTop + clientHeight === scrollHeight) {\n      setPostsToShow(postsToShow + showCount);\n    }\n  }\n\n  return (\n    <>\n      {/** Post List Area */}   \n      {posts.length > 0 ?\n        <>\n          {posts.slice(0, postsToShow).map((post, i) => {\n            const {title, date, category, tags, featuredImage} = post.node.frontmatter;\n            return (\n              <article key={i} className={view}>\n                <Link to={post.node.fields.slug}>\n                  <img src={featuredImage ? featuredImage.childImageSharp.resize.src : Thumbnail} />\n\n                  <div className=\"post-info\">\n                    <p className=\"date\">{date}</p>\n                    <span className=\"category\">{category}</span>\n                    <h1 className=\"title\">\n                      {title}\n                    </h1>\n       \n                    <p className=\"summary\" dangerouslySetInnerHTML={{__html: post.node.excerpt,}}/> \n\n\n                    <div className=\"tags-wrap\">\n                      {tags && tags.map((tag, i) => (\n                        <span className='tag' key={i}><Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link></span>\n                      ))}\n                    </div> \n                    </div>\n                </Link>\n              </article>\n          )})\n          }\n        </>\n      : \n      <div className=\"empty\">게시글이 존재하지 않습니다.</div>\n    }\n  </>\n  );\n};\n\nexport default Posts;","module.exports = __webpack_public_path__ + \"static/gradation-bg-ede5f65187fb6614201d52efa7ce59b1.png\";"],"sourceRoot":""}